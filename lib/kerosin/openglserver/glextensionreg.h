#ifndef GLEXTENSIONREG_H__
#define GLEXTENSIONREG_H__

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__)
#define WIN32_LEAN_AND_MEAN 1
#include <windows.h>
#endif

#include <GL/gl.h>
#include <GL/glext.h>

#if defined(_WIN32)
#include <GL/wglext.h>
#endif

struct GLExtGenFunctionPointers
{
#ifdef GL_3DFX_tbuffer
	PFNGLTBUFFERMASK3DFXPROC glTbufferMask3DFX;
#endif //GL_3DFX_tbuffer

#ifdef GL_ARB_imaging
	PFNGLBLENDCOLORPROC glBlendColor;
	PFNGLBLENDEQUATIONPROC glBlendEquation;
	PFNGLCOLORTABLEPROC glColorTable;
	PFNGLCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
	PFNGLCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
	PFNGLCOPYCOLORTABLEPROC glCopyColorTable;
	PFNGLGETCOLORTABLEPROC glGetColorTable;
	PFNGLGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
	PFNGLGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
	PFNGLCOLORSUBTABLEPROC glColorSubTable;
	PFNGLCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
	PFNGLCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
	PFNGLCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
	PFNGLCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
	PFNGLCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
	PFNGLCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
	PFNGLCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
	PFNGLCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
	PFNGLCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
	PFNGLGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
	PFNGLGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
	PFNGLGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
	PFNGLGETSEPARABLEFILTERPROC glGetSeparableFilter;
	PFNGLSEPARABLEFILTER2DPROC glSeparableFilter2D;
	PFNGLGETHISTOGRAMPROC glGetHistogram;
	PFNGLGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
	PFNGLGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
	PFNGLGETMINMAXPROC glGetMinmax;
	PFNGLGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
	PFNGLGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
	PFNGLHISTOGRAMPROC glHistogram;
	PFNGLMINMAXPROC glMinmax;
	PFNGLRESETHISTOGRAMPROC glResetHistogram;
	PFNGLRESETMINMAXPROC glResetMinmax;
#endif //GL_ARB_imaging

#ifdef GL_ARB_matrix_palette
	PFNGLCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
	PFNGLMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
	PFNGLMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
	PFNGLMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
	PFNGLMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif //GL_ARB_matrix_palette

#ifdef GL_ARB_multisample
	PFNGLSAMPLECOVERAGEARBPROC glSampleCoverageARB;
#endif //GL_ARB_multisample

#ifdef GL_ARB_multitexture
	PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;
	PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
	PFNGLMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
	PFNGLMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
	PFNGLMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
	PFNGLMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
	PFNGLMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
	PFNGLMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
	PFNGLMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
	PFNGLMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
	PFNGLMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
	PFNGLMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
	PFNGLMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
	PFNGLMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
	PFNGLMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
	PFNGLMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
	PFNGLMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
	PFNGLMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
	PFNGLMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
	PFNGLMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
	PFNGLMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
	PFNGLMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
	PFNGLMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
	PFNGLMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
	PFNGLMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
	PFNGLMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
	PFNGLMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
	PFNGLMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
	PFNGLMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
	PFNGLMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
	PFNGLMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
	PFNGLMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
	PFNGLMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
	PFNGLMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif //GL_ARB_multitexture

#ifdef GL_ARB_point_parameters
	PFNGLPOINTPARAMETERFARBPROC glPointParameterfARB;
	PFNGLPOINTPARAMETERFVARBPROC glPointParameterfvARB;
#endif //GL_ARB_point_parameters

#ifdef GL_ARB_texture_compression
	PFNGLCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
	PFNGLCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
	PFNGLCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
	PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
	PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
	PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
	PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif //GL_ARB_texture_compression

#ifdef GL_ARB_transpose_matrix
	PFNGLLOADTRANSPOSEMATRIXFARBPROC glLoadTransposeMatrixfARB;
	PFNGLLOADTRANSPOSEMATRIXDARBPROC glLoadTransposeMatrixdARB;
	PFNGLMULTTRANSPOSEMATRIXFARBPROC glMultTransposeMatrixfARB;
	PFNGLMULTTRANSPOSEMATRIXDARBPROC glMultTransposeMatrixdARB;
#endif //GL_ARB_transpose_matrix

#ifdef GL_ARB_vertex_blend
	PFNGLWEIGHTBVARBPROC glWeightbvARB;
	PFNGLWEIGHTSVARBPROC glWeightsvARB;
	PFNGLWEIGHTIVARBPROC glWeightivARB;
	PFNGLWEIGHTFVARBPROC glWeightfvARB;
	PFNGLWEIGHTDVARBPROC glWeightdvARB;
	PFNGLWEIGHTUBVARBPROC glWeightubvARB;
	PFNGLWEIGHTUSVARBPROC glWeightusvARB;
	PFNGLWEIGHTUIVARBPROC glWeightuivARB;
	PFNGLWEIGHTPOINTERARBPROC glWeightPointerARB;
	PFNGLVERTEXBLENDARBPROC glVertexBlendARB;
#endif //GL_ARB_vertex_blend

#ifdef GL_ARB_window_pos
	PFNGLWINDOWPOS2DARBPROC glWindowPos2dARB;
	PFNGLWINDOWPOS2DVARBPROC glWindowPos2dvARB;
	PFNGLWINDOWPOS2FARBPROC glWindowPos2fARB;
	PFNGLWINDOWPOS2FVARBPROC glWindowPos2fvARB;
	PFNGLWINDOWPOS2IARBPROC glWindowPos2iARB;
	PFNGLWINDOWPOS2IVARBPROC glWindowPos2ivARB;
	PFNGLWINDOWPOS2SARBPROC glWindowPos2sARB;
	PFNGLWINDOWPOS2SVARBPROC glWindowPos2svARB;
	PFNGLWINDOWPOS3DARBPROC glWindowPos3dARB;
	PFNGLWINDOWPOS3DVARBPROC glWindowPos3dvARB;
	PFNGLWINDOWPOS3FARBPROC glWindowPos3fARB;
	PFNGLWINDOWPOS3FVARBPROC glWindowPos3fvARB;
	PFNGLWINDOWPOS3IARBPROC glWindowPos3iARB;
	PFNGLWINDOWPOS3IVARBPROC glWindowPos3ivARB;
	PFNGLWINDOWPOS3SARBPROC glWindowPos3sARB;
	PFNGLWINDOWPOS3SVARBPROC glWindowPos3svARB;
#endif //GL_ARB_window_pos

#ifdef GL_ATI_element_array
	PFNGLELEMENTPOINTERATIPROC glElementPointerATI;
	PFNGLDRAWELEMENTARRAYATIPROC glDrawElementArrayATI;
	PFNGLDRAWRANGEELEMENTARRAYATIPROC glDrawRangeElementArrayATI;
#endif //GL_ATI_element_array

#ifdef GL_ATI_envmap_bumpmap
	PFNGLTEXBUMPPARAMETERIVATIPROC glTexBumpParameterivATI;
	PFNGLTEXBUMPPARAMETERFVATIPROC glTexBumpParameterfvATI;
	PFNGLGETTEXBUMPPARAMETERIVATIPROC glGetTexBumpParameterivATI;
	PFNGLGETTEXBUMPPARAMETERFVATIPROC glGetTexBumpParameterfvATI;
#endif //GL_ATI_envmap_bumpmap

#ifdef GL_ATI_fragment_shader
	PFNGLGENFRAGMENTSHADERSATIPROC glGenFragmentShadersATI;
	PFNGLBINDFRAGMENTSHADERATIPROC glBindFragmentShaderATI;
	PFNGLDELETEFRAGMENTSHADERATIPROC glDeleteFragmentShaderATI;
	PFNGLBEGINFRAGMENTSHADERATIPROC glBeginFragmentShaderATI;
	PFNGLENDFRAGMENTSHADERATIPROC glEndFragmentShaderATI;
	PFNGLPASSTEXCOORDATIPROC glPassTexCoordATI;
	PFNGLSAMPLEMAPATIPROC glSampleMapATI;
	PFNGLCOLORFRAGMENTOP1ATIPROC glColorFragmentOp1ATI;
	PFNGLCOLORFRAGMENTOP2ATIPROC glColorFragmentOp2ATI;
	PFNGLCOLORFRAGMENTOP3ATIPROC glColorFragmentOp3ATI;
	PFNGLALPHAFRAGMENTOP1ATIPROC glAlphaFragmentOp1ATI;
	PFNGLALPHAFRAGMENTOP2ATIPROC glAlphaFragmentOp2ATI;
	PFNGLALPHAFRAGMENTOP3ATIPROC glAlphaFragmentOp3ATI;
	PFNGLSETFRAGMENTSHADERCONSTANTATIPROC glSetFragmentShaderConstantATI;
#endif //GL_ATI_fragment_shader

#ifdef GL_ATI_pn_triangles
	PFNGLPNTRIANGLESIATIPROC glPNTrianglesiATI;
	PFNGLPNTRIANGLESFATIPROC glPNTrianglesfATI;
#endif //GL_ATI_pn_triangles

#ifdef GL_ATI_vertex_array_object
	PFNGLNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
	PFNGLISOBJECTBUFFERATIPROC glIsObjectBufferATI;
	PFNGLUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
	PFNGLGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
	PFNGLGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
	PFNGLDELETEOBJECTBUFFERATIPROC glDeleteObjectBufferATI;
	PFNGLARRAYOBJECTATIPROC glArrayObjectATI;
	PFNGLGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
	PFNGLGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
	PFNGLVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
	PFNGLGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
	PFNGLGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif //GL_ATI_vertex_array_object

#ifdef GL_ATI_vertex_streams
	PFNGLVERTEXSTREAM1SATIPROC glVertexStream1sATI;
	PFNGLVERTEXSTREAM1SVATIPROC glVertexStream1svATI;
	PFNGLVERTEXSTREAM1IATIPROC glVertexStream1iATI;
	PFNGLVERTEXSTREAM1IVATIPROC glVertexStream1ivATI;
	PFNGLVERTEXSTREAM1FATIPROC glVertexStream1fATI;
	PFNGLVERTEXSTREAM1FVATIPROC glVertexStream1fvATI;
	PFNGLVERTEXSTREAM1DATIPROC glVertexStream1dATI;
	PFNGLVERTEXSTREAM1DVATIPROC glVertexStream1dvATI;
	PFNGLVERTEXSTREAM2SATIPROC glVertexStream2sATI;
	PFNGLVERTEXSTREAM2SVATIPROC glVertexStream2svATI;
	PFNGLVERTEXSTREAM2IATIPROC glVertexStream2iATI;
	PFNGLVERTEXSTREAM2IVATIPROC glVertexStream2ivATI;
	PFNGLVERTEXSTREAM2FATIPROC glVertexStream2fATI;
	PFNGLVERTEXSTREAM2FVATIPROC glVertexStream2fvATI;
	PFNGLVERTEXSTREAM2DATIPROC glVertexStream2dATI;
	PFNGLVERTEXSTREAM2DVATIPROC glVertexStream2dvATI;
	PFNGLVERTEXSTREAM3SATIPROC glVertexStream3sATI;
	PFNGLVERTEXSTREAM3SVATIPROC glVertexStream3svATI;
	PFNGLVERTEXSTREAM3IATIPROC glVertexStream3iATI;
	PFNGLVERTEXSTREAM3IVATIPROC glVertexStream3ivATI;
	PFNGLVERTEXSTREAM3FATIPROC glVertexStream3fATI;
	PFNGLVERTEXSTREAM3FVATIPROC glVertexStream3fvATI;
	PFNGLVERTEXSTREAM3DATIPROC glVertexStream3dATI;
	PFNGLVERTEXSTREAM3DVATIPROC glVertexStream3dvATI;
	PFNGLVERTEXSTREAM4SATIPROC glVertexStream4sATI;
	PFNGLVERTEXSTREAM4SVATIPROC glVertexStream4svATI;
	PFNGLVERTEXSTREAM4IATIPROC glVertexStream4iATI;
	PFNGLVERTEXSTREAM4IVATIPROC glVertexStream4ivATI;
	PFNGLVERTEXSTREAM4FATIPROC glVertexStream4fATI;
	PFNGLVERTEXSTREAM4FVATIPROC glVertexStream4fvATI;
	PFNGLVERTEXSTREAM4DATIPROC glVertexStream4dATI;
	PFNGLVERTEXSTREAM4DVATIPROC glVertexStream4dvATI;
	PFNGLNORMALSTREAM3BATIPROC glNormalStream3bATI;
	PFNGLNORMALSTREAM3BVATIPROC glNormalStream3bvATI;
	PFNGLNORMALSTREAM3SATIPROC glNormalStream3sATI;
	PFNGLNORMALSTREAM3SVATIPROC glNormalStream3svATI;
	PFNGLNORMALSTREAM3IATIPROC glNormalStream3iATI;
	PFNGLNORMALSTREAM3IVATIPROC glNormalStream3ivATI;
	PFNGLNORMALSTREAM3FATIPROC glNormalStream3fATI;
	PFNGLNORMALSTREAM3FVATIPROC glNormalStream3fvATI;
	PFNGLNORMALSTREAM3DATIPROC glNormalStream3dATI;
	PFNGLNORMALSTREAM3DVATIPROC glNormalStream3dvATI;
	PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC glClientActiveVertexStreamATI;
	PFNGLVERTEXBLENDENVIATIPROC glVertexBlendEnviATI;
	PFNGLVERTEXBLENDENVFATIPROC glVertexBlendEnvfATI;
#endif //GL_ATI_vertex_streams

#ifdef GL_EXT_blend_color
	PFNGLBLENDCOLOREXTPROC glBlendColorEXT;
#endif //GL_EXT_blend_color

#ifdef GL_EXT_blend_func_separate
	PFNGLBLENDFUNCSEPARATEEXTPROC glBlendFuncSeparateEXT;
	PFNGLBLENDFUNCSEPARATEINGRPROC glBlendFuncSeparateINGR;
#endif //GL_EXT_blend_func_separate

#ifdef GL_EXT_blend_minmax
	PFNGLBLENDEQUATIONEXTPROC glBlendEquationEXT;
#endif //GL_EXT_blend_minmax

#ifdef GL_EXT_color_subtable
	PFNGLCOLORSUBTABLEEXTPROC glColorSubTableEXT;
	PFNGLCOPYCOLORSUBTABLEEXTPROC glCopyColorSubTableEXT;
#endif //GL_EXT_color_subtable

#ifdef GL_EXT_compiled_vertex_array
	PFNGLLOCKARRAYSEXTPROC glLockArraysEXT;
	PFNGLUNLOCKARRAYSEXTPROC glUnlockArraysEXT;
#endif //GL_EXT_compiled_vertex_array

#ifdef GL_EXT_convolution
	PFNGLCONVOLUTIONFILTER1DEXTPROC glConvolutionFilter1DEXT;
	PFNGLCONVOLUTIONFILTER2DEXTPROC glConvolutionFilter2DEXT;
	PFNGLCONVOLUTIONPARAMETERFEXTPROC glConvolutionParameterfEXT;
	PFNGLCONVOLUTIONPARAMETERFVEXTPROC glConvolutionParameterfvEXT;
	PFNGLCONVOLUTIONPARAMETERIEXTPROC glConvolutionParameteriEXT;
	PFNGLCONVOLUTIONPARAMETERIVEXTPROC glConvolutionParameterivEXT;
	PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC glCopyConvolutionFilter1DEXT;
	PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC glCopyConvolutionFilter2DEXT;
	PFNGLGETCONVOLUTIONFILTEREXTPROC glGetConvolutionFilterEXT;
	PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC glGetConvolutionParameterfvEXT;
	PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC glGetConvolutionParameterivEXT;
	PFNGLGETSEPARABLEFILTEREXTPROC glGetSeparableFilterEXT;
	PFNGLSEPARABLEFILTER2DEXTPROC glSeparableFilter2DEXT;
#endif //GL_EXT_convolution

#ifdef GL_EXT_coordinate_frame
	PFNGLTANGENT3BEXTPROC glTangent3bEXT;
	PFNGLTANGENT3BVEXTPROC glTangent3bvEXT;
	PFNGLTANGENT3DEXTPROC glTangent3dEXT;
	PFNGLTANGENT3DVEXTPROC glTangent3dvEXT;
	PFNGLTANGENT3FEXTPROC glTangent3fEXT;
	PFNGLTANGENT3FVEXTPROC glTangent3fvEXT;
	PFNGLTANGENT3IEXTPROC glTangent3iEXT;
	PFNGLTANGENT3IVEXTPROC glTangent3ivEXT;
	PFNGLTANGENT3SEXTPROC glTangent3sEXT;
	PFNGLTANGENT3SVEXTPROC glTangent3svEXT;
	PFNGLBINORMAL3BEXTPROC glBinormal3bEXT;
	PFNGLBINORMAL3BVEXTPROC glBinormal3bvEXT;
	PFNGLBINORMAL3DEXTPROC glBinormal3dEXT;
	PFNGLBINORMAL3DVEXTPROC glBinormal3dvEXT;
	PFNGLBINORMAL3FEXTPROC glBinormal3fEXT;
	PFNGLBINORMAL3FVEXTPROC glBinormal3fvEXT;
	PFNGLBINORMAL3IEXTPROC glBinormal3iEXT;
	PFNGLBINORMAL3IVEXTPROC glBinormal3ivEXT;
	PFNGLBINORMAL3SEXTPROC glBinormal3sEXT;
	PFNGLBINORMAL3SVEXTPROC glBinormal3svEXT;
	PFNGLTANGENTPOINTEREXTPROC glTangentPointerEXT;
	PFNGLBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif //GL_EXT_coordinate_frame

#ifdef GL_EXT_copy_texture
	PFNGLCOPYTEXIMAGE1DEXTPROC glCopyTexImage1DEXT;
	PFNGLCOPYTEXIMAGE2DEXTPROC glCopyTexImage2DEXT;
	PFNGLCOPYTEXSUBIMAGE1DEXTPROC glCopyTexSubImage1DEXT;
	PFNGLCOPYTEXSUBIMAGE2DEXTPROC glCopyTexSubImage2DEXT;
	PFNGLCOPYTEXSUBIMAGE3DEXTPROC glCopyTexSubImage3DEXT;
#endif //GL_EXT_copy_texture

#ifdef GL_EXT_cull_vertex
	PFNGLCULLPARAMETERDVEXTPROC glCullParameterdvEXT;
	PFNGLCULLPARAMETERFVEXTPROC glCullParameterfvEXT;
#endif //GL_EXT_cull_vertex

#ifdef GL_EXT_draw_range_elements
	PFNGLDRAWRANGEELEMENTSEXTPROC glDrawRangeElementsEXT;
#endif //GL_EXT_draw_range_elements

#ifdef GL_EXT_fog_coord
	PFNGLFOGCOORDFEXTPROC glFogCoordfEXT;
	PFNGLFOGCOORDFVEXTPROC glFogCoordfvEXT;
	PFNGLFOGCOORDDEXTPROC glFogCoorddEXT;
	PFNGLFOGCOORDDVEXTPROC glFogCoorddvEXT;
	PFNGLFOGCOORDPOINTEREXTPROC glFogCoordPointerEXT;
#endif //GL_EXT_fog_coord

#ifdef GL_EXT_histogram
	PFNGLGETHISTOGRAMEXTPROC glGetHistogramEXT;
	PFNGLGETHISTOGRAMPARAMETERFVEXTPROC glGetHistogramParameterfvEXT;
	PFNGLGETHISTOGRAMPARAMETERIVEXTPROC glGetHistogramParameterivEXT;
	PFNGLGETMINMAXEXTPROC glGetMinmaxEXT;
	PFNGLGETMINMAXPARAMETERFVEXTPROC glGetMinmaxParameterfvEXT;
	PFNGLGETMINMAXPARAMETERIVEXTPROC glGetMinmaxParameterivEXT;
	PFNGLHISTOGRAMEXTPROC glHistogramEXT;
	PFNGLMINMAXEXTPROC glMinmaxEXT;
	PFNGLRESETHISTOGRAMEXTPROC glResetHistogramEXT;
	PFNGLRESETMINMAXEXTPROC glResetMinmaxEXT;
#endif //GL_EXT_histogram

#ifdef GL_EXT_index_func
	PFNGLINDEXFUNCEXTPROC glIndexFuncEXT;
#endif //GL_EXT_index_func

#ifdef GL_EXT_index_material
	PFNGLINDEXMATERIALEXTPROC glIndexMaterialEXT;
#endif //GL_EXT_index_material

#ifdef GL_EXT_light_texture
	PFNGLAPPLYTEXTUREEXTPROC glApplyTextureEXT;
	PFNGLTEXTURELIGHTEXTPROC glTextureLightEXT;
	PFNGLTEXTUREMATERIALEXTPROC glTextureMaterialEXT;
#endif //GL_EXT_light_texture

#ifdef GL_EXT_multi_draw_arrays
	PFNGLMULTIDRAWARRAYSEXTPROC glMultiDrawArraysEXT;
	PFNGLMULTIDRAWELEMENTSEXTPROC glMultiDrawElementsEXT;
#endif //GL_EXT_multi_draw_arrays

#ifdef GL_EXT_multisample
	PFNGLSAMPLEMASKEXTPROC glSampleMaskEXT;
	PFNGLSAMPLEPATTERNEXTPROC glSamplePatternEXT;
#endif //GL_EXT_multisample

#ifdef GL_EXT_paletted_texture
	PFNGLCOLORTABLEEXTPROC glColorTableEXT;
	PFNGLGETCOLORTABLEEXTPROC glGetColorTableEXT;
	PFNGLGETCOLORTABLEPARAMETERIVEXTPROC glGetColorTableParameterivEXT;
	PFNGLGETCOLORTABLEPARAMETERFVEXTPROC glGetColorTableParameterfvEXT;
#endif //GL_EXT_paletted_texture

#ifdef GL_EXT_pixel_transform
	PFNGLPIXELTRANSFORMPARAMETERIEXTPROC glPixelTransformParameteriEXT;
	PFNGLPIXELTRANSFORMPARAMETERFEXTPROC glPixelTransformParameterfEXT;
	PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC glPixelTransformParameterivEXT;
	PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC glPixelTransformParameterfvEXT;
#endif //GL_EXT_pixel_transform

#ifdef GL_EXT_point_parameters
	PFNGLPOINTPARAMETERFEXTPROC glPointParameterfEXT;
	PFNGLPOINTPARAMETERFVEXTPROC glPointParameterfvEXT;
#endif //GL_EXT_point_parameters

#ifdef GL_EXT_polygon_offset
	PFNGLPOLYGONOFFSETEXTPROC glPolygonOffsetEXT;
#endif //GL_EXT_polygon_offset

#ifdef GL_EXT_secondary_color
	PFNGLSECONDARYCOLOR3BEXTPROC glSecondaryColor3bEXT;
	PFNGLSECONDARYCOLOR3BVEXTPROC glSecondaryColor3bvEXT;
	PFNGLSECONDARYCOLOR3DEXTPROC glSecondaryColor3dEXT;
	PFNGLSECONDARYCOLOR3DVEXTPROC glSecondaryColor3dvEXT;
	PFNGLSECONDARYCOLOR3FEXTPROC glSecondaryColor3fEXT;
	PFNGLSECONDARYCOLOR3FVEXTPROC glSecondaryColor3fvEXT;
	PFNGLSECONDARYCOLOR3IEXTPROC glSecondaryColor3iEXT;
	PFNGLSECONDARYCOLOR3IVEXTPROC glSecondaryColor3ivEXT;
	PFNGLSECONDARYCOLOR3SEXTPROC glSecondaryColor3sEXT;
	PFNGLSECONDARYCOLOR3SVEXTPROC glSecondaryColor3svEXT;
	PFNGLSECONDARYCOLOR3UBEXTPROC glSecondaryColor3ubEXT;
	PFNGLSECONDARYCOLOR3UBVEXTPROC glSecondaryColor3ubvEXT;
	PFNGLSECONDARYCOLOR3UIEXTPROC glSecondaryColor3uiEXT;
	PFNGLSECONDARYCOLOR3UIVEXTPROC glSecondaryColor3uivEXT;
	PFNGLSECONDARYCOLOR3USEXTPROC glSecondaryColor3usEXT;
	PFNGLSECONDARYCOLOR3USVEXTPROC glSecondaryColor3usvEXT;
	PFNGLSECONDARYCOLORPOINTEREXTPROC glSecondaryColorPointerEXT;
#endif //GL_EXT_secondary_color

#ifdef GL_EXT_stencil_two_side
	PFNGLACTIVESTENCILFACEEXTPROC glActiveStencilFaceEXT;
#endif //GL_EXT_stencil_two_side

#ifdef GL_EXT_subtexture
	PFNGLTEXSUBIMAGE1DEXTPROC glTexSubImage1DEXT;
	PFNGLTEXSUBIMAGE2DEXTPROC glTexSubImage2DEXT;
#endif //GL_EXT_subtexture

#ifdef GL_EXT_texture3D
	PFNGLTEXIMAGE3DEXTPROC glTexImage3DEXT;
	PFNGLTEXSUBIMAGE3DEXTPROC glTexSubImage3DEXT;
#endif //GL_EXT_texture3D

#ifdef GL_EXT_texture_object
	PFNGLARETEXTURESRESIDENTEXTPROC glAreTexturesResidentEXT;
	PFNGLBINDTEXTUREEXTPROC glBindTextureEXT;
	PFNGLDELETETEXTURESEXTPROC glDeleteTexturesEXT;
	PFNGLGENTEXTURESEXTPROC glGenTexturesEXT;
	PFNGLISTEXTUREEXTPROC glIsTextureEXT;
	PFNGLPRIORITIZETEXTURESEXTPROC glPrioritizeTexturesEXT;
#endif //GL_EXT_texture_object

#ifdef GL_EXT_texture_perturb_normal
	PFNGLTEXTURENORMALEXTPROC glTextureNormalEXT;
#endif //GL_EXT_texture_perturb_normal

#ifdef GL_EXT_vertex_array
	PFNGLARRAYELEMENTEXTPROC glArrayElementEXT;
	PFNGLCOLORPOINTEREXTPROC glColorPointerEXT;
	PFNGLDRAWARRAYSEXTPROC glDrawArraysEXT;
	PFNGLEDGEFLAGPOINTEREXTPROC glEdgeFlagPointerEXT;
	PFNGLGETPOINTERVEXTPROC glGetPointervEXT;
	PFNGLINDEXPOINTEREXTPROC glIndexPointerEXT;
	PFNGLNORMALPOINTEREXTPROC glNormalPointerEXT;
	PFNGLTEXCOORDPOINTEREXTPROC glTexCoordPointerEXT;
	PFNGLVERTEXPOINTEREXTPROC glVertexPointerEXT;
#endif //GL_EXT_vertex_array

#ifdef GL_EXT_vertex_shader
	PFNGLBEGINVERTEXSHADEREXTPROC glBeginVertexShaderEXT;
	PFNGLENDVERTEXSHADEREXTPROC glEndVertexShaderEXT;
	PFNGLBINDVERTEXSHADEREXTPROC glBindVertexShaderEXT;
	PFNGLGENVERTEXSHADERSEXTPROC glGenVertexShadersEXT;
	PFNGLDELETEVERTEXSHADEREXTPROC glDeleteVertexShaderEXT;
	PFNGLSHADEROP1EXTPROC glShaderOp1EXT;
	PFNGLSHADEROP2EXTPROC glShaderOp2EXT;
	PFNGLSHADEROP3EXTPROC glShaderOp3EXT;
	PFNGLSWIZZLEEXTPROC glSwizzleEXT;
	PFNGLWRITEMASKEXTPROC glWriteMaskEXT;
	PFNGLINSERTCOMPONENTEXTPROC glInsertComponentEXT;
	PFNGLEXTRACTCOMPONENTEXTPROC glExtractComponentEXT;
	PFNGLGENSYMBOLSEXTPROC glGenSymbolsEXT;
	PFNGLSETINVARIANTEXTPROC glSetInvariantEXT;
	PFNGLSETLOCALCONSTANTEXTPROC glSetLocalConstantEXT;
	PFNGLVARIANTBVEXTPROC glVariantbvEXT;
	PFNGLVARIANTSVEXTPROC glVariantsvEXT;
	PFNGLVARIANTIVEXTPROC glVariantivEXT;
	PFNGLVARIANTFVEXTPROC glVariantfvEXT;
	PFNGLVARIANTDVEXTPROC glVariantdvEXT;
	PFNGLVARIANTUBVEXTPROC glVariantubvEXT;
	PFNGLVARIANTUSVEXTPROC glVariantusvEXT;
	PFNGLVARIANTUIVEXTPROC glVariantuivEXT;
	PFNGLVARIANTPOINTEREXTPROC glVariantPointerEXT;
	PFNGLENABLEVARIANTCLIENTSTATEEXTPROC glEnableVariantClientStateEXT;
	PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC glDisableVariantClientStateEXT;
	PFNGLBINDLIGHTPARAMETEREXTPROC glBindLightParameterEXT;
	PFNGLBINDMATERIALPARAMETEREXTPROC glBindMaterialParameterEXT;
	PFNGLBINDTEXGENPARAMETEREXTPROC glBindTexGenParameterEXT;
	PFNGLBINDTEXTUREUNITPARAMETEREXTPROC glBindTextureUnitParameterEXT;
	PFNGLBINDPARAMETEREXTPROC glBindParameterEXT;
	PFNGLISVARIANTENABLEDEXTPROC glIsVariantEnabledEXT;
	PFNGLGETVARIANTBOOLEANVEXTPROC glGetVariantBooleanvEXT;
	PFNGLGETVARIANTINTEGERVEXTPROC glGetVariantIntegervEXT;
	PFNGLGETVARIANTFLOATVEXTPROC glGetVariantFloatvEXT;
	PFNGLGETVARIANTPOINTERVEXTPROC glGetVariantPointervEXT;
	PFNGLGETINVARIANTBOOLEANVEXTPROC glGetInvariantBooleanvEXT;
	PFNGLGETINVARIANTINTEGERVEXTPROC glGetInvariantIntegervEXT;
	PFNGLGETINVARIANTFLOATVEXTPROC glGetInvariantFloatvEXT;
	PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC glGetLocalConstantBooleanvEXT;
	PFNGLGETLOCALCONSTANTINTEGERVEXTPROC glGetLocalConstantIntegervEXT;
	PFNGLGETLOCALCONSTANTFLOATVEXTPROC glGetLocalConstantFloatvEXT;
#endif //GL_EXT_vertex_shader

#ifdef GL_EXT_vertex_weighting
	PFNGLVERTEXWEIGHTFEXTPROC glVertexWeightfEXT;
	PFNGLVERTEXWEIGHTFVEXTPROC glVertexWeightfvEXT;
	PFNGLVERTEXWEIGHTPOINTEREXTPROC glVertexWeightPointerEXT;
#endif //GL_EXT_vertex_weighting

#ifdef GL_HP_image_transform
	PFNGLIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
	PFNGLIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
	PFNGLIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
	PFNGLIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
	PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
	PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif //GL_HP_image_transform

#ifdef GL_IBM_multimode_draw_arrays
	PFNGLMULTIMODEDRAWARRAYSIBMPROC glMultiModeDrawArraysIBM;
	PFNGLMULTIMODEDRAWELEMENTSIBMPROC glMultiModeDrawElementsIBM;
#endif //GL_IBM_multimode_draw_arrays

#ifdef GL_IBM_vertex_array_lists
	PFNGLCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
	PFNGLSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
	PFNGLEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
	PFNGLFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
	PFNGLINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
	PFNGLNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
	PFNGLTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
	PFNGLVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif //GL_IBM_vertex_array_lists

#ifdef GL_INTEL_parallel_arrays
	PFNGLVERTEXPOINTERVINTELPROC glVertexPointervINTEL;
	PFNGLNORMALPOINTERVINTELPROC glNormalPointervINTEL;
	PFNGLCOLORPOINTERVINTELPROC glColorPointervINTEL;
	PFNGLTEXCOORDPOINTERVINTELPROC glTexCoordPointervINTEL;
#endif //GL_INTEL_parallel_arrays

#ifdef GL_MESA_resize_buffers
	PFNGLRESIZEBUFFERSMESAPROC glResizeBuffersMESA;
#endif //GL_MESA_resize_buffers

#ifdef GL_MESA_window_pos
	PFNGLWINDOWPOS2DMESAPROC glWindowPos2dMESA;
	PFNGLWINDOWPOS2DVMESAPROC glWindowPos2dvMESA;
	PFNGLWINDOWPOS2FMESAPROC glWindowPos2fMESA;
	PFNGLWINDOWPOS2FVMESAPROC glWindowPos2fvMESA;
	PFNGLWINDOWPOS2IMESAPROC glWindowPos2iMESA;
	PFNGLWINDOWPOS2IVMESAPROC glWindowPos2ivMESA;
	PFNGLWINDOWPOS2SMESAPROC glWindowPos2sMESA;
	PFNGLWINDOWPOS2SVMESAPROC glWindowPos2svMESA;
	PFNGLWINDOWPOS3DMESAPROC glWindowPos3dMESA;
	PFNGLWINDOWPOS3DVMESAPROC glWindowPos3dvMESA;
	PFNGLWINDOWPOS3FMESAPROC glWindowPos3fMESA;
	PFNGLWINDOWPOS3FVMESAPROC glWindowPos3fvMESA;
	PFNGLWINDOWPOS3IMESAPROC glWindowPos3iMESA;
	PFNGLWINDOWPOS3IVMESAPROC glWindowPos3ivMESA;
	PFNGLWINDOWPOS3SMESAPROC glWindowPos3sMESA;
	PFNGLWINDOWPOS3SVMESAPROC glWindowPos3svMESA;
	PFNGLWINDOWPOS4DMESAPROC glWindowPos4dMESA;
	PFNGLWINDOWPOS4DVMESAPROC glWindowPos4dvMESA;
	PFNGLWINDOWPOS4FMESAPROC glWindowPos4fMESA;
	PFNGLWINDOWPOS4FVMESAPROC glWindowPos4fvMESA;
	PFNGLWINDOWPOS4IMESAPROC glWindowPos4iMESA;
	PFNGLWINDOWPOS4IVMESAPROC glWindowPos4ivMESA;
	PFNGLWINDOWPOS4SMESAPROC glWindowPos4sMESA;
	PFNGLWINDOWPOS4SVMESAPROC glWindowPos4svMESA;
#endif //GL_MESA_window_pos

#ifdef GL_NV_evaluators
	PFNGLMAPCONTROLPOINTSNVPROC glMapControlPointsNV;
	PFNGLMAPPARAMETERIVNVPROC glMapParameterivNV;
	PFNGLMAPPARAMETERFVNVPROC glMapParameterfvNV;
	PFNGLGETMAPCONTROLPOINTSNVPROC glGetMapControlPointsNV;
	PFNGLGETMAPPARAMETERIVNVPROC glGetMapParameterivNV;
	PFNGLGETMAPPARAMETERFVNVPROC glGetMapParameterfvNV;
	PFNGLGETMAPATTRIBPARAMETERIVNVPROC glGetMapAttribParameterivNV;
	PFNGLGETMAPATTRIBPARAMETERFVNVPROC glGetMapAttribParameterfvNV;
	PFNGLEVALMAPSNVPROC glEvalMapsNV;
#endif //GL_NV_evaluators

#ifdef GL_NV_fence
	PFNGLDELETEFENCESNVPROC glDeleteFencesNV;
	PFNGLGENFENCESNVPROC glGenFencesNV;
	PFNGLISFENCENVPROC glIsFenceNV;
	PFNGLTESTFENCENVPROC glTestFenceNV;
	PFNGLGETFENCEIVNVPROC glGetFenceivNV;
	PFNGLFINISHFENCENVPROC glFinishFenceNV;
	PFNGLSETFENCENVPROC glSetFenceNV;
#endif //GL_NV_fence

#ifdef GL_NV_occlusion_query
	PFNGLGENOCCLUSIONQUERIESNVPROC glGenOcclusionQueriesNV;
	PFNGLDELETEOCCLUSIONQUERIESNVPROC glDeleteOcclusionQueriesNV;
	PFNGLISOCCLUSIONQUERYNVPROC glIsOcclusionQueryNV;
	PFNGLBEGINOCCLUSIONQUERYNVPROC glBeginOcclusionQueryNV;
	PFNGLENDOCCLUSIONQUERYNVPROC glEndOcclusionQueryNV;
	PFNGLGETOCCLUSIONQUERYIVNVPROC glGetOcclusionQueryivNV;
	PFNGLGETOCCLUSIONQUERYUIVNVPROC glGetOcclusionQueryuivNV;
#endif //GL_NV_occlusion_query

#ifdef GL_NV_point_sprite
	PFNGLPOINTPARAMETERINVPROC glPointParameteriNV;
	PFNGLPOINTPARAMETERIVNVPROC glPointParameterivNV;
#endif //GL_NV_point_sprite

#ifdef GL_NV_register_combiners
	PFNGLCOMBINERPARAMETERFVNVPROC glCombinerParameterfvNV;
	PFNGLCOMBINERPARAMETERFNVPROC glCombinerParameterfNV;
	PFNGLCOMBINERPARAMETERIVNVPROC glCombinerParameterivNV;
	PFNGLCOMBINERPARAMETERINVPROC glCombinerParameteriNV;
	PFNGLCOMBINERINPUTNVPROC glCombinerInputNV;
	PFNGLCOMBINEROUTPUTNVPROC glCombinerOutputNV;
	PFNGLFINALCOMBINERINPUTNVPROC glFinalCombinerInputNV;
	PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC glGetCombinerInputParameterfvNV;
	PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC glGetCombinerInputParameterivNV;
	PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC glGetCombinerOutputParameterfvNV;
	PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC glGetCombinerOutputParameterivNV;
	PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC glGetFinalCombinerInputParameterfvNV;
	PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC glGetFinalCombinerInputParameterivNV;
#endif //GL_NV_register_combiners

#ifdef GL_NV_register_combiners2
	PFNGLCOMBINERSTAGEPARAMETERFVNVPROC glCombinerStageParameterfvNV;
	PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC glGetCombinerStageParameterfvNV;
#endif //GL_NV_register_combiners2

#ifdef GL_NV_vertex_array_range
	PFNGLFLUSHVERTEXARRAYRANGENVPROC glFlushVertexArrayRangeNV;
	PFNGLVERTEXARRAYRANGENVPROC glVertexArrayRangeNV;
#endif //GL_NV_vertex_array_range

#ifdef GL_NV_vertex_program
	PFNGLAREPROGRAMSRESIDENTNVPROC glAreProgramsResidentNV;
	PFNGLBINDPROGRAMNVPROC glBindProgramNV;
	PFNGLDELETEPROGRAMSNVPROC glDeleteProgramsNV;
	PFNGLEXECUTEPROGRAMNVPROC glExecuteProgramNV;
	PFNGLGENPROGRAMSNVPROC glGenProgramsNV;
	PFNGLGETPROGRAMPARAMETERDVNVPROC glGetProgramParameterdvNV;
	PFNGLGETPROGRAMPARAMETERFVNVPROC glGetProgramParameterfvNV;
	PFNGLGETPROGRAMIVNVPROC glGetProgramivNV;
	PFNGLGETPROGRAMSTRINGNVPROC glGetProgramStringNV;
	PFNGLGETTRACKMATRIXIVNVPROC glGetTrackMatrixivNV;
	PFNGLGETVERTEXATTRIBDVNVPROC glGetVertexAttribdvNV;
	PFNGLGETVERTEXATTRIBFVNVPROC glGetVertexAttribfvNV;
	PFNGLGETVERTEXATTRIBIVNVPROC glGetVertexAttribivNV;
	PFNGLGETVERTEXATTRIBPOINTERVNVPROC glGetVertexAttribPointervNV;
	PFNGLISPROGRAMNVPROC glIsProgramNV;
	PFNGLLOADPROGRAMNVPROC glLoadProgramNV;
	PFNGLPROGRAMPARAMETER4DNVPROC glProgramParameter4dNV;
	PFNGLPROGRAMPARAMETER4DVNVPROC glProgramParameter4dvNV;
	PFNGLPROGRAMPARAMETER4FNVPROC glProgramParameter4fNV;
	PFNGLPROGRAMPARAMETER4FVNVPROC glProgramParameter4fvNV;
	PFNGLPROGRAMPARAMETERS4DVNVPROC glProgramParameters4dvNV;
	PFNGLPROGRAMPARAMETERS4FVNVPROC glProgramParameters4fvNV;
	PFNGLREQUESTRESIDENTPROGRAMSNVPROC glRequestResidentProgramsNV;
	PFNGLTRACKMATRIXNVPROC glTrackMatrixNV;
	PFNGLVERTEXATTRIBPOINTERNVPROC glVertexAttribPointerNV;
	PFNGLVERTEXATTRIB1DNVPROC glVertexAttrib1dNV;
	PFNGLVERTEXATTRIB1DVNVPROC glVertexAttrib1dvNV;
	PFNGLVERTEXATTRIB1FNVPROC glVertexAttrib1fNV;
	PFNGLVERTEXATTRIB1FVNVPROC glVertexAttrib1fvNV;
	PFNGLVERTEXATTRIB1SNVPROC glVertexAttrib1sNV;
	PFNGLVERTEXATTRIB1SVNVPROC glVertexAttrib1svNV;
	PFNGLVERTEXATTRIB2DNVPROC glVertexAttrib2dNV;
	PFNGLVERTEXATTRIB2DVNVPROC glVertexAttrib2dvNV;
	PFNGLVERTEXATTRIB2FNVPROC glVertexAttrib2fNV;
	PFNGLVERTEXATTRIB2FVNVPROC glVertexAttrib2fvNV;
	PFNGLVERTEXATTRIB2SNVPROC glVertexAttrib2sNV;
	PFNGLVERTEXATTRIB2SVNVPROC glVertexAttrib2svNV;
	PFNGLVERTEXATTRIB3DNVPROC glVertexAttrib3dNV;
	PFNGLVERTEXATTRIB3DVNVPROC glVertexAttrib3dvNV;
	PFNGLVERTEXATTRIB3FNVPROC glVertexAttrib3fNV;
	PFNGLVERTEXATTRIB3FVNVPROC glVertexAttrib3fvNV;
	PFNGLVERTEXATTRIB3SNVPROC glVertexAttrib3sNV;
	PFNGLVERTEXATTRIB3SVNVPROC glVertexAttrib3svNV;
	PFNGLVERTEXATTRIB4DNVPROC glVertexAttrib4dNV;
	PFNGLVERTEXATTRIB4DVNVPROC glVertexAttrib4dvNV;
	PFNGLVERTEXATTRIB4FNVPROC glVertexAttrib4fNV;
	PFNGLVERTEXATTRIB4FVNVPROC glVertexAttrib4fvNV;
	PFNGLVERTEXATTRIB4SNVPROC glVertexAttrib4sNV;
	PFNGLVERTEXATTRIB4SVNVPROC glVertexAttrib4svNV;
	PFNGLVERTEXATTRIB4UBNVPROC glVertexAttrib4ubNV;
	PFNGLVERTEXATTRIB4UBVNVPROC glVertexAttrib4ubvNV;
	PFNGLVERTEXATTRIBS1DVNVPROC glVertexAttribs1dvNV;
	PFNGLVERTEXATTRIBS1FVNVPROC glVertexAttribs1fvNV;
	PFNGLVERTEXATTRIBS1SVNVPROC glVertexAttribs1svNV;
	PFNGLVERTEXATTRIBS2DVNVPROC glVertexAttribs2dvNV;
	PFNGLVERTEXATTRIBS2FVNVPROC glVertexAttribs2fvNV;
	PFNGLVERTEXATTRIBS2SVNVPROC glVertexAttribs2svNV;
	PFNGLVERTEXATTRIBS3DVNVPROC glVertexAttribs3dvNV;
	PFNGLVERTEXATTRIBS3FVNVPROC glVertexAttribs3fvNV;
	PFNGLVERTEXATTRIBS3SVNVPROC glVertexAttribs3svNV;
	PFNGLVERTEXATTRIBS4DVNVPROC glVertexAttribs4dvNV;
	PFNGLVERTEXATTRIBS4FVNVPROC glVertexAttribs4fvNV;
	PFNGLVERTEXATTRIBS4SVNVPROC glVertexAttribs4svNV;
	PFNGLVERTEXATTRIBS4UBVNVPROC glVertexAttribs4ubvNV;
#endif //GL_NV_vertex_program

#ifdef GL_PGI_misc_hints
	PFNGLHINTPGIPROC glHintPGI;
#endif //GL_PGI_misc_hints

#ifdef GL_SGIS_detail_texture
	PFNGLDETAILTEXFUNCSGISPROC glDetailTexFuncSGIS;
	PFNGLGETDETAILTEXFUNCSGISPROC glGetDetailTexFuncSGIS;
#endif //GL_SGIS_detail_texture

#ifdef GL_SGIS_fog_function
	PFNGLFOGFUNCSGISPROC glFogFuncSGIS;
	PFNGLGETFOGFUNCSGISPROC glGetFogFuncSGIS;
#endif //GL_SGIS_fog_function

#ifdef GL_SGIS_multisample
	PFNGLSAMPLEMASKSGISPROC glSampleMaskSGIS;
	PFNGLSAMPLEPATTERNSGISPROC glSamplePatternSGIS;
#endif //GL_SGIS_multisample

#ifdef GL_SGIS_pixel_texture
	PFNGLPIXELTEXGENPARAMETERISGISPROC glPixelTexGenParameteriSGIS;
	PFNGLPIXELTEXGENPARAMETERIVSGISPROC glPixelTexGenParameterivSGIS;
	PFNGLPIXELTEXGENPARAMETERFSGISPROC glPixelTexGenParameterfSGIS;
	PFNGLPIXELTEXGENPARAMETERFVSGISPROC glPixelTexGenParameterfvSGIS;
	PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC glGetPixelTexGenParameterivSGIS;
	PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC glGetPixelTexGenParameterfvSGIS;
#endif //GL_SGIS_pixel_texture

#ifdef GL_SGIS_point_parameters
	PFNGLPOINTPARAMETERFSGISPROC glPointParameterfSGIS;
	PFNGLPOINTPARAMETERFVSGISPROC glPointParameterfvSGIS;
#endif //GL_SGIS_point_parameters

#ifdef GL_SGIS_sharpen_texture
	PFNGLSHARPENTEXFUNCSGISPROC glSharpenTexFuncSGIS;
	PFNGLGETSHARPENTEXFUNCSGISPROC glGetSharpenTexFuncSGIS;
#endif //GL_SGIS_sharpen_texture

#ifdef GL_SGIS_texture4D
	PFNGLTEXIMAGE4DSGISPROC glTexImage4DSGIS;
	PFNGLTEXSUBIMAGE4DSGISPROC glTexSubImage4DSGIS;
#endif //GL_SGIS_texture4D

#ifdef GL_SGIS_texture_color_mask
	PFNGLTEXTURECOLORMASKSGISPROC glTextureColorMaskSGIS;
#endif //GL_SGIS_texture_color_mask

#ifdef GL_SGIS_texture_filter4
	PFNGLGETTEXFILTERFUNCSGISPROC glGetTexFilterFuncSGIS;
	PFNGLTEXFILTERFUNCSGISPROC glTexFilterFuncSGIS;
#endif //GL_SGIS_texture_filter4

#ifdef GL_SGIX_async
	PFNGLASYNCMARKERSGIXPROC glAsyncMarkerSGIX;
	PFNGLFINISHASYNCSGIXPROC glFinishAsyncSGIX;
	PFNGLPOLLASYNCSGIXPROC glPollAsyncSGIX;
	PFNGLGENASYNCMARKERSSGIXPROC glGenAsyncMarkersSGIX;
	PFNGLDELETEASYNCMARKERSSGIXPROC glDeleteAsyncMarkersSGIX;
	PFNGLISASYNCMARKERSGIXPROC glIsAsyncMarkerSGIX;
#endif //GL_SGIX_async

#ifdef GL_SGIX_flush_raster
	PFNGLFLUSHRASTERSGIXPROC glFlushRasterSGIX;
#endif //GL_SGIX_flush_raster

#ifdef GL_SGIX_fragment_lighting
	PFNGLFRAGMENTCOLORMATERIALSGIXPROC glFragmentColorMaterialSGIX;
	PFNGLFRAGMENTLIGHTFSGIXPROC glFragmentLightfSGIX;
	PFNGLFRAGMENTLIGHTFVSGIXPROC glFragmentLightfvSGIX;
	PFNGLFRAGMENTLIGHTISGIXPROC glFragmentLightiSGIX;
	PFNGLFRAGMENTLIGHTIVSGIXPROC glFragmentLightivSGIX;
	PFNGLFRAGMENTLIGHTMODELFSGIXPROC glFragmentLightModelfSGIX;
	PFNGLFRAGMENTLIGHTMODELFVSGIXPROC glFragmentLightModelfvSGIX;
	PFNGLFRAGMENTLIGHTMODELISGIXPROC glFragmentLightModeliSGIX;
	PFNGLFRAGMENTLIGHTMODELIVSGIXPROC glFragmentLightModelivSGIX;
	PFNGLFRAGMENTMATERIALFSGIXPROC glFragmentMaterialfSGIX;
	PFNGLFRAGMENTMATERIALFVSGIXPROC glFragmentMaterialfvSGIX;
	PFNGLFRAGMENTMATERIALISGIXPROC glFragmentMaterialiSGIX;
	PFNGLFRAGMENTMATERIALIVSGIXPROC glFragmentMaterialivSGIX;
	PFNGLGETFRAGMENTLIGHTFVSGIXPROC glGetFragmentLightfvSGIX;
	PFNGLGETFRAGMENTLIGHTIVSGIXPROC glGetFragmentLightivSGIX;
	PFNGLGETFRAGMENTMATERIALFVSGIXPROC glGetFragmentMaterialfvSGIX;
	PFNGLGETFRAGMENTMATERIALIVSGIXPROC glGetFragmentMaterialivSGIX;
	PFNGLLIGHTENVISGIXPROC glLightEnviSGIX;
#endif //GL_SGIX_fragment_lighting

#ifdef GL_SGIX_framezoom
	PFNGLFRAMEZOOMSGIXPROC glFrameZoomSGIX;
#endif //GL_SGIX_framezoom

#ifdef GL_SGIX_igloo_interface
	PFNGLIGLOOINTERFACESGIXPROC glIglooInterfaceSGIX;
#endif //GL_SGIX_igloo_interface

#ifdef GL_SGIX_instruments
	PFNGLGETINSTRUMENTSSGIXPROC glGetInstrumentsSGIX;
	PFNGLINSTRUMENTSBUFFERSGIXPROC glInstrumentsBufferSGIX;
	PFNGLPOLLINSTRUMENTSSGIXPROC glPollInstrumentsSGIX;
	PFNGLREADINSTRUMENTSSGIXPROC glReadInstrumentsSGIX;
	PFNGLSTARTINSTRUMENTSSGIXPROC glStartInstrumentsSGIX;
	PFNGLSTOPINSTRUMENTSSGIXPROC glStopInstrumentsSGIX;
#endif //GL_SGIX_instruments

#ifdef GL_SGIX_list_priority
	PFNGLGETLISTPARAMETERFVSGIXPROC glGetListParameterfvSGIX;
	PFNGLGETLISTPARAMETERIVSGIXPROC glGetListParameterivSGIX;
	PFNGLLISTPARAMETERFSGIXPROC glListParameterfSGIX;
	PFNGLLISTPARAMETERFVSGIXPROC glListParameterfvSGIX;
	PFNGLLISTPARAMETERISGIXPROC glListParameteriSGIX;
	PFNGLLISTPARAMETERIVSGIXPROC glListParameterivSGIX;
#endif //GL_SGIX_list_priority

#ifdef GL_SGIX_pixel_texture
	PFNGLPIXELTEXGENSGIXPROC glPixelTexGenSGIX;
#endif //GL_SGIX_pixel_texture

#ifdef GL_SGIX_polynomial_ffd
	PFNGLDEFORMATIONMAP3DSGIXPROC glDeformationMap3dSGIX;
	PFNGLDEFORMATIONMAP3FSGIXPROC glDeformationMap3fSGIX;
	PFNGLDEFORMSGIXPROC glDeformSGIX;
	PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC glLoadIdentityDeformationMapSGIX;
#endif //GL_SGIX_polynomial_ffd

#ifdef GL_SGIX_reference_plane
	PFNGLREFERENCEPLANESGIXPROC glReferencePlaneSGIX;
#endif //GL_SGIX_reference_plane

#ifdef GL_SGIX_sprite
	PFNGLSPRITEPARAMETERFSGIXPROC glSpriteParameterfSGIX;
	PFNGLSPRITEPARAMETERFVSGIXPROC glSpriteParameterfvSGIX;
	PFNGLSPRITEPARAMETERISGIXPROC glSpriteParameteriSGIX;
	PFNGLSPRITEPARAMETERIVSGIXPROC glSpriteParameterivSGIX;
#endif //GL_SGIX_sprite

#ifdef GL_SGIX_tag_sample_buffer
	PFNGLTAGSAMPLEBUFFERSGIXPROC glTagSampleBufferSGIX;
#endif //GL_SGIX_tag_sample_buffer

#ifdef GL_SGI_color_table
	PFNGLCOLORTABLESGIPROC glColorTableSGI;
	PFNGLCOLORTABLEPARAMETERFVSGIPROC glColorTableParameterfvSGI;
	PFNGLCOLORTABLEPARAMETERIVSGIPROC glColorTableParameterivSGI;
	PFNGLCOPYCOLORTABLESGIPROC glCopyColorTableSGI;
	PFNGLGETCOLORTABLESGIPROC glGetColorTableSGI;
	PFNGLGETCOLORTABLEPARAMETERFVSGIPROC glGetColorTableParameterfvSGI;
	PFNGLGETCOLORTABLEPARAMETERIVSGIPROC glGetColorTableParameterivSGI;
#endif //GL_SGI_color_table

#ifdef GL_SUNX_constant_data
	PFNGLFINISHTEXTURESUNXPROC glFinishTextureSUNX;
#endif //GL_SUNX_constant_data

#ifdef GL_SUN_global_alpha
	PFNGLGLOBALALPHAFACTORBSUNPROC glGlobalAlphaFactorbSUN;
	PFNGLGLOBALALPHAFACTORSSUNPROC glGlobalAlphaFactorsSUN;
	PFNGLGLOBALALPHAFACTORISUNPROC glGlobalAlphaFactoriSUN;
	PFNGLGLOBALALPHAFACTORFSUNPROC glGlobalAlphaFactorfSUN;
	PFNGLGLOBALALPHAFACTORDSUNPROC glGlobalAlphaFactordSUN;
	PFNGLGLOBALALPHAFACTORUBSUNPROC glGlobalAlphaFactorubSUN;
	PFNGLGLOBALALPHAFACTORUSSUNPROC glGlobalAlphaFactorusSUN;
	PFNGLGLOBALALPHAFACTORUISUNPROC glGlobalAlphaFactoruiSUN;
#endif //GL_SUN_global_alpha

#ifdef GL_SUN_mesh_array
	PFNGLDRAWMESHARRAYSSUNPROC glDrawMeshArraysSUN;
#endif //GL_SUN_mesh_array

#ifdef GL_SUN_triangle_list
	PFNGLREPLACEMENTCODEUISUNPROC glReplacementCodeuiSUN;
	PFNGLREPLACEMENTCODEUSSUNPROC glReplacementCodeusSUN;
	PFNGLREPLACEMENTCODEUBSUNPROC glReplacementCodeubSUN;
	PFNGLREPLACEMENTCODEUIVSUNPROC glReplacementCodeuivSUN;
	PFNGLREPLACEMENTCODEUSVSUNPROC glReplacementCodeusvSUN;
	PFNGLREPLACEMENTCODEUBVSUNPROC glReplacementCodeubvSUN;
	PFNGLREPLACEMENTCODEPOINTERSUNPROC glReplacementCodePointerSUN;
#endif //GL_SUN_triangle_list

#ifdef GL_SUN_vertex
	PFNGLCOLOR4UBVERTEX2FSUNPROC glColor4ubVertex2fSUN;
	PFNGLCOLOR4UBVERTEX2FVSUNPROC glColor4ubVertex2fvSUN;
	PFNGLCOLOR4UBVERTEX3FSUNPROC glColor4ubVertex3fSUN;
	PFNGLCOLOR4UBVERTEX3FVSUNPROC glColor4ubVertex3fvSUN;
	PFNGLCOLOR3FVERTEX3FSUNPROC glColor3fVertex3fSUN;
	PFNGLCOLOR3FVERTEX3FVSUNPROC glColor3fVertex3fvSUN;
	PFNGLNORMAL3FVERTEX3FSUNPROC glNormal3fVertex3fSUN;
	PFNGLNORMAL3FVERTEX3FVSUNPROC glNormal3fVertex3fvSUN;
	PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC glColor4fNormal3fVertex3fSUN;
	PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC glColor4fNormal3fVertex3fvSUN;
	PFNGLTEXCOORD2FVERTEX3FSUNPROC glTexCoord2fVertex3fSUN;
	PFNGLTEXCOORD2FVERTEX3FVSUNPROC glTexCoord2fVertex3fvSUN;
	PFNGLTEXCOORD4FVERTEX4FSUNPROC glTexCoord4fVertex4fSUN;
	PFNGLTEXCOORD4FVERTEX4FVSUNPROC glTexCoord4fVertex4fvSUN;
	PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC glTexCoord2fColor4ubVertex3fSUN;
	PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC glTexCoord2fColor4ubVertex3fvSUN;
	PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC glTexCoord2fColor3fVertex3fSUN;
	PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC glTexCoord2fColor3fVertex3fvSUN;
	PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC glTexCoord2fNormal3fVertex3fSUN;
	PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fNormal3fVertex3fvSUN;
	PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glTexCoord2fColor4fNormal3fVertex3fSUN;
	PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fColor4fNormal3fVertex3fvSUN;
	PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC glTexCoord4fColor4fNormal3fVertex4fSUN;
	PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC glTexCoord4fColor4fNormal3fVertex4fvSUN;
	PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC glReplacementCodeuiVertex3fSUN;
	PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC glReplacementCodeuiVertex3fvSUN;
	PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC glReplacementCodeuiColor4ubVertex3fSUN;
	PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC glReplacementCodeuiColor4ubVertex3fvSUN;
	PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC glReplacementCodeuiColor3fVertex3fSUN;
	PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC glReplacementCodeuiColor3fVertex3fvSUN;
	PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC glReplacementCodeuiNormal3fVertex3fSUN;
	PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiNormal3fVertex3fvSUN;
	PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fSUN;
	PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
	PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fVertex3fSUN;
	PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fVertex3fvSUN;
	PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
	PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
	PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
	PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
#endif //GL_SUN_vertex

#ifdef GL_VERSION_1_2
	PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
	PFNGLTEXIMAGE3DPROC glTexImage3D;
	PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
	PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif //GL_VERSION_1_2

#ifdef GL_VERSION_1_3
	PFNGLACTIVETEXTUREPROC glActiveTexture;
	PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
	PFNGLMULTITEXCOORD1DPROC glMultiTexCoord1d;
	PFNGLMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
	PFNGLMULTITEXCOORD1FPROC glMultiTexCoord1f;
	PFNGLMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
	PFNGLMULTITEXCOORD1IPROC glMultiTexCoord1i;
	PFNGLMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
	PFNGLMULTITEXCOORD1SPROC glMultiTexCoord1s;
	PFNGLMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
	PFNGLMULTITEXCOORD2DPROC glMultiTexCoord2d;
	PFNGLMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
	PFNGLMULTITEXCOORD2FPROC glMultiTexCoord2f;
	PFNGLMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
	PFNGLMULTITEXCOORD2IPROC glMultiTexCoord2i;
	PFNGLMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
	PFNGLMULTITEXCOORD2SPROC glMultiTexCoord2s;
	PFNGLMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
	PFNGLMULTITEXCOORD3DPROC glMultiTexCoord3d;
	PFNGLMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
	PFNGLMULTITEXCOORD3FPROC glMultiTexCoord3f;
	PFNGLMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
	PFNGLMULTITEXCOORD3IPROC glMultiTexCoord3i;
	PFNGLMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
	PFNGLMULTITEXCOORD3SPROC glMultiTexCoord3s;
	PFNGLMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
	PFNGLMULTITEXCOORD4DPROC glMultiTexCoord4d;
	PFNGLMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
	PFNGLMULTITEXCOORD4FPROC glMultiTexCoord4f;
	PFNGLMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
	PFNGLMULTITEXCOORD4IPROC glMultiTexCoord4i;
	PFNGLMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
	PFNGLMULTITEXCOORD4SPROC glMultiTexCoord4s;
	PFNGLMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
	PFNGLLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
	PFNGLLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
	PFNGLMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
	PFNGLMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
	PFNGLSAMPLECOVERAGEPROC glSampleCoverage;
	PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
	PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
	PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
	PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
	PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
	PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
	PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
#endif //GL_VERSION_1_3

	#if defined(_WIN32)
#ifdef WGL_ARB_buffer_region
	PFNWGLCREATEBUFFERREGIONARBPROC wglCreateBufferRegionARB;
	PFNWGLDELETEBUFFERREGIONARBPROC wglDeleteBufferRegionARB;
	PFNWGLSAVEBUFFERREGIONARBPROC wglSaveBufferRegionARB;
	PFNWGLRESTOREBUFFERREGIONARBPROC wglRestoreBufferRegionARB;
#endif //WGL_ARB_buffer_region

#ifdef WGL_ARB_extensions_string
	PFNWGLGETEXTENSIONSSTRINGARBPROC wglGetExtensionsStringARB;
#endif //WGL_ARB_extensions_string

#ifdef WGL_ARB_make_current_read
	PFNWGLMAKECONTEXTCURRENTARBPROC wglMakeContextCurrentARB;
	PFNWGLGETCURRENTREADDCARBPROC wglGetCurrentReadDCARB;
#endif //WGL_ARB_make_current_read

#ifdef WGL_ARB_pbuffer
	PFNWGLCREATEPBUFFERARBPROC wglCreatePbufferARB;
	PFNWGLGETPBUFFERDCARBPROC wglGetPbufferDCARB;
	PFNWGLRELEASEPBUFFERDCARBPROC wglReleasePbufferDCARB;
	PFNWGLDESTROYPBUFFERARBPROC wglDestroyPbufferARB;
	PFNWGLQUERYPBUFFERARBPROC wglQueryPbufferARB;
#endif //WGL_ARB_pbuffer

#ifdef WGL_ARB_pixel_format
	PFNWGLGETPIXELFORMATATTRIBIVARBPROC wglGetPixelFormatAttribivARB;
	PFNWGLGETPIXELFORMATATTRIBFVARBPROC wglGetPixelFormatAttribfvARB;
	PFNWGLCHOOSEPIXELFORMATARBPROC wglChoosePixelFormatARB;
#endif //WGL_ARB_pixel_format

#ifdef WGL_ARB_render_texture
	PFNWGLBINDTEXIMAGEARBPROC wglBindTexImageARB;
	PFNWGLRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
	PFNWGLSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif //WGL_ARB_render_texture

#ifdef WGL_EXT_display_color_table
	PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC wglCreateDisplayColorTableEXT;
	PFNWGLLOADDISPLAYCOLORTABLEEXTPROC wglLoadDisplayColorTableEXT;
	PFNWGLBINDDISPLAYCOLORTABLEEXTPROC wglBindDisplayColorTableEXT;
	PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC wglDestroyDisplayColorTableEXT;
#endif //WGL_EXT_display_color_table

#ifdef WGL_EXT_extensions_string
	PFNWGLGETEXTENSIONSSTRINGEXTPROC wglGetExtensionsStringEXT;
#endif //WGL_EXT_extensions_string

#ifdef WGL_EXT_make_current_read
	PFNWGLMAKECONTEXTCURRENTEXTPROC wglMakeContextCurrentEXT;
	PFNWGLGETCURRENTREADDCEXTPROC wglGetCurrentReadDCEXT;
#endif //WGL_EXT_make_current_read

#ifdef WGL_EXT_pbuffer
	PFNWGLCREATEPBUFFEREXTPROC wglCreatePbufferEXT;
	PFNWGLGETPBUFFERDCEXTPROC wglGetPbufferDCEXT;
	PFNWGLRELEASEPBUFFERDCEXTPROC wglReleasePbufferDCEXT;
	PFNWGLDESTROYPBUFFEREXTPROC wglDestroyPbufferEXT;
	PFNWGLQUERYPBUFFEREXTPROC wglQueryPbufferEXT;
#endif //WGL_EXT_pbuffer

#ifdef WGL_EXT_pixel_format
	PFNWGLGETPIXELFORMATATTRIBIVEXTPROC wglGetPixelFormatAttribivEXT;
	PFNWGLGETPIXELFORMATATTRIBFVEXTPROC wglGetPixelFormatAttribfvEXT;
	PFNWGLCHOOSEPIXELFORMATEXTPROC wglChoosePixelFormatEXT;
#endif //WGL_EXT_pixel_format

#ifdef WGL_EXT_swap_control
	PFNWGLSWAPINTERVALEXTPROC wglSwapIntervalEXT;
	PFNWGLGETSWAPINTERVALEXTPROC wglGetSwapIntervalEXT;
#endif //WGL_EXT_swap_control

#ifdef WGL_I3D_digital_video_control
	PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC wglGetDigitalVideoParametersI3D;
	PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC wglSetDigitalVideoParametersI3D;
#endif //WGL_I3D_digital_video_control

#ifdef WGL_I3D_gamma
	PFNWGLGETGAMMATABLEPARAMETERSI3DPROC wglGetGammaTableParametersI3D;
	PFNWGLSETGAMMATABLEPARAMETERSI3DPROC wglSetGammaTableParametersI3D;
	PFNWGLGETGAMMATABLEI3DPROC wglGetGammaTableI3D;
	PFNWGLSETGAMMATABLEI3DPROC wglSetGammaTableI3D;
#endif //WGL_I3D_gamma

#ifdef WGL_I3D_genlock
	PFNWGLENABLEGENLOCKI3DPROC wglEnableGenlockI3D;
	PFNWGLDISABLEGENLOCKI3DPROC wglDisableGenlockI3D;
	PFNWGLISENABLEDGENLOCKI3DPROC wglIsEnabledGenlockI3D;
	PFNWGLGENLOCKSOURCEI3DPROC wglGenlockSourceI3D;
	PFNWGLGETGENLOCKSOURCEI3DPROC wglGetGenlockSourceI3D;
	PFNWGLGENLOCKSOURCEEDGEI3DPROC wglGenlockSourceEdgeI3D;
	PFNWGLGETGENLOCKSOURCEEDGEI3DPROC wglGetGenlockSourceEdgeI3D;
	PFNWGLGENLOCKSAMPLERATEI3DPROC wglGenlockSampleRateI3D;
	PFNWGLGETGENLOCKSAMPLERATEI3DPROC wglGetGenlockSampleRateI3D;
	PFNWGLGENLOCKSOURCEDELAYI3DPROC wglGenlockSourceDelayI3D;
	PFNWGLGETGENLOCKSOURCEDELAYI3DPROC wglGetGenlockSourceDelayI3D;
	PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC wglQueryGenlockMaxSourceDelayI3D;
#endif //WGL_I3D_genlock

#ifdef WGL_I3D_image_buffer
	PFNWGLCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
	PFNWGLDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
	PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
	PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif //WGL_I3D_image_buffer

#ifdef WGL_I3D_swap_frame_lock
	PFNWGLENABLEFRAMELOCKI3DPROC wglEnableFrameLockI3D;
	PFNWGLDISABLEFRAMELOCKI3DPROC wglDisableFrameLockI3D;
	PFNWGLISENABLEDFRAMELOCKI3DPROC wglIsEnabledFrameLockI3D;
	PFNWGLQUERYFRAMELOCKMASTERI3DPROC wglQueryFrameLockMasterI3D;
#endif //WGL_I3D_swap_frame_lock

#ifdef WGL_I3D_swap_frame_usage
	PFNWGLGETFRAMEUSAGEI3DPROC wglGetFrameUsageI3D;
	PFNWGLBEGINFRAMETRACKINGI3DPROC wglBeginFrameTrackingI3D;
	PFNWGLENDFRAMETRACKINGI3DPROC wglEndFrameTrackingI3D;
	PFNWGLQUERYFRAMETRACKINGI3DPROC wglQueryFrameTrackingI3D;
#endif //WGL_I3D_swap_frame_usage

#ifdef WGL_NV_vertex_array_range
	PFNWGLALLOCATEMEMORYNVPROC wglAllocateMemoryNV;
	PFNWGLFREEMEMORYNVPROC wglFreeMemoryNV;
#endif //WGL_NV_vertex_array_range

#ifdef WGL_OML_sync_control
	PFNWGLGETSYNCVALUESOMLPROC wglGetSyncValuesOML;
	PFNWGLGETMSCRATEOMLPROC wglGetMscRateOML;
	PFNWGLSWAPBUFFERSMSCOMLPROC wglSwapBuffersMscOML;
	PFNWGLSWAPLAYERBUFFERSMSCOMLPROC wglSwapLayerBuffersMscOML;
	PFNWGLWAITFORMSCOMLPROC wglWaitForMscOML;
	PFNWGLWAITFORSBCOMLPROC wglWaitForSbcOML;
#endif //WGL_OML_sync_control

	#endif //_WIN32
};
struct GLExtGenExtensions
{
	bool mGL_3DFX_multisample;
	bool mGL_3DFX_tbuffer;
	bool mGL_3DFX_texture_compression_FXT1;
	bool mGL_APPLE_specular_vector;
	bool mGL_APPLE_transform_hint;
	bool mGL_ARB_depth_texture;
	bool mGL_ARB_imaging;
	bool mGL_ARB_matrix_palette;
	bool mGL_ARB_multisample;
	bool mGL_ARB_multitexture;
	bool mGL_ARB_point_parameters;
	bool mGL_ARB_shadow;
	bool mGL_ARB_shadow_ambient;
	bool mGL_ARB_texture_border_clamp;
	bool mGL_ARB_texture_compression;
	bool mGL_ARB_texture_cube_map;
	bool mGL_ARB_texture_env_add;
	bool mGL_ARB_texture_env_combine;
	bool mGL_ARB_texture_env_crossbar;
	bool mGL_ARB_texture_env_dot3;
	bool mGL_ARB_texture_mirror_repeat;
	bool mGL_ARB_texture_mirrored_repeat;
	bool mGL_ARB_transpose_matrix;
	bool mGL_ARB_vertex_blend;
	bool mGL_ARB_window_pos;
	bool mGL_ATI_element_array;
	bool mGL_ATI_envmap_bumpmap;
	bool mGL_ATI_fragment_shader;
	bool mGL_ATI_pn_triangles;
	bool mGL_ATI_texture_mirror_once;
	bool mGL_ATI_vertex_array_object;
	bool mGL_ATI_vertex_streams;
	bool mGL_EXT_422_pixels;
	bool mGL_EXT_abgr;
	bool mGL_EXT_bgra;
	bool mGL_EXT_blend_color;
	bool mGL_EXT_blend_func_separate;
	bool mGL_EXT_blend_logic_op;
	bool mGL_EXT_blend_minmax;
	bool mGL_EXT_blend_subtract;
	bool mGL_EXT_clip_volume_hint;
	bool mGL_EXT_cmyka;
	bool mGL_EXT_color_matrix;
	bool mGL_EXT_color_subtable;
	bool mGL_EXT_compiled_vertex_array;
	bool mGL_EXT_convolution;
	bool mGL_EXT_coordinate_frame;
	bool mGL_EXT_copy_texture;
	bool mGL_EXT_cull_vertex;
	bool mGL_EXT_draw_range_elements;
	bool mGL_EXT_fog_coord;
	bool mGL_EXT_histogram;
	bool mGL_EXT_index_array_formats;
	bool mGL_EXT_index_func;
	bool mGL_EXT_index_material;
	bool mGL_EXT_index_texture;
	bool mGL_EXT_light_texture;
	bool mGL_EXT_misc_attribute;
	bool mGL_EXT_multi_draw_arrays;
	bool mGL_EXT_multisample;
	bool mGL_EXT_packed_pixels;
	bool mGL_EXT_paletted_texture;
	bool mGL_EXT_pixel_transform;
	bool mGL_EXT_pixel_transform_color_table;
	bool mGL_EXT_point_parameters;
	bool mGL_EXT_polygon_offset;
	bool mGL_EXT_rescale_normal;
	bool mGL_EXT_secondary_color;
	bool mGL_EXT_separate_specular_color;
	bool mGL_EXT_shadow_funcs;
	bool mGL_EXT_shared_texture_palette;
	bool mGL_EXT_stencil_two_side;
	bool mGL_EXT_stencil_wrap;
	bool mGL_EXT_subtexture;
	bool mGL_EXT_texture;
	bool mGL_EXT_texture3D;
	bool mGL_EXT_texture_compression_s3tc;
	bool mGL_EXT_texture_cube_map;
	bool mGL_EXT_texture_env_add;
	bool mGL_EXT_texture_env_combine;
	bool mGL_EXT_texture_env_dot3;
	bool mGL_EXT_texture_filter_anisotropic;
	bool mGL_EXT_texture_lod_bias;
	bool mGL_EXT_texture_object;
	bool mGL_EXT_texture_perturb_normal;
	bool mGL_EXT_vertex_array;
	bool mGL_EXT_vertex_shader;
	bool mGL_EXT_vertex_weighting;
	bool mGL_FfdMaskSGIX;
	bool mGL_HP_convolution_border_modes;
	bool mGL_HP_image_transform;
	bool mGL_HP_occlusion_test;
	bool mGL_HP_texture_lighting;
	bool mGL_IBM_cull_vertex;
	bool mGL_IBM_multimode_draw_arrays;
	bool mGL_IBM_rasterpos_clip;
	bool mGL_IBM_texture_mirrored_repeat;
	bool mGL_IBM_vertex_array_lists;
	bool mGL_INGR_color_clamp;
	bool mGL_INGR_interlace_read;
	bool mGL_INGR_palette_buffer;
	bool mGL_INTEL_parallel_arrays;
	bool mGL_INTEL_texture_scissor;
	bool mGL_MESA_resize_buffers;
	bool mGL_MESA_window_pos;
	bool mGL_NV_blend_square;
	bool mGL_NV_copy_depth_to_color;
	bool mGL_NV_depth_clamp;
	bool mGL_NV_evaluators;
	bool mGL_NV_fence;
	bool mGL_NV_fog_distance;
	bool mGL_NV_light_max_exponent;
	bool mGL_NV_multisample_filter_hint;
	bool mGL_NV_occlusion_query;
	bool mGL_NV_packed_depth_stencil;
	bool mGL_NV_point_sprite;
	bool mGL_NV_register_combiners;
	bool mGL_NV_register_combiners2;
	bool mGL_NV_texgen_emboss;
	bool mGL_NV_texgen_reflection;
	bool mGL_NV_texture_compression_vtc;
	bool mGL_NV_texture_env_combine4;
	bool mGL_NV_texture_rectangle;
	bool mGL_NV_texture_shader;
	bool mGL_NV_texture_shader2;
	bool mGL_NV_texture_shader3;
	bool mGL_NV_vertex_array_range;
	bool mGL_NV_vertex_array_range2;
	bool mGL_NV_vertex_program;
	bool mGL_NV_vertex_program1_1;
	bool mGL_OML_interlace;
	bool mGL_OML_resample;
	bool mGL_OML_subsample;
	bool mGL_PGI_misc_hints;
	bool mGL_PGI_vertex_hints;
	bool mGL_REND_screen_coordinates;
	bool mGL_SGIS_detail_texture;
	bool mGL_SGIS_fog_function;
	bool mGL_SGIS_generate_mipmap;
	bool mGL_SGIS_multisample;
	bool mGL_SGIS_pixel_texture;
	bool mGL_SGIS_point_line_texgen;
	bool mGL_SGIS_point_parameters;
	bool mGL_SGIS_sharpen_texture;
	bool mGL_SGIS_texture4D;
	bool mGL_SGIS_texture_border_clamp;
	bool mGL_SGIS_texture_color_mask;
	bool mGL_SGIS_texture_edge_clamp;
	bool mGL_SGIS_texture_filter4;
	bool mGL_SGIS_texture_lod;
	bool mGL_SGIS_texture_select;
	bool mGL_SGIX_async;
	bool mGL_SGIX_async_histogram;
	bool mGL_SGIX_async_pixel;
	bool mGL_SGIX_blend_alpha_minmax;
	bool mGL_SGIX_calligraphic_fragment;
	bool mGL_SGIX_clipmap;
	bool mGL_SGIX_convolution_accuracy;
	bool mGL_SGIX_depth_pass_instrument;
	bool mGL_SGIX_depth_texture;
	bool mGL_SGIX_flush_raster;
	bool mGL_SGIX_fog_offset;
	bool mGL_SGIX_fog_scale;
	bool mGL_SGIX_fragment_lighting;
	bool mGL_SGIX_framezoom;
	bool mGL_SGIX_igloo_interface;
	bool mGL_SGIX_impact_pixel_texture;
	bool mGL_SGIX_instruments;
	bool mGL_SGIX_interlace;
	bool mGL_SGIX_ir_instrument1;
	bool mGL_SGIX_list_priority;
	bool mGL_SGIX_pixel_texture;
	bool mGL_SGIX_pixel_tiles;
	bool mGL_SGIX_polynomial_ffd;
	bool mGL_SGIX_reference_plane;
	bool mGL_SGIX_resample;
	bool mGL_SGIX_scalebias_hint;
	bool mGL_SGIX_shadow;
	bool mGL_SGIX_shadow_ambient;
	bool mGL_SGIX_sprite;
	bool mGL_SGIX_subsample;
	bool mGL_SGIX_tag_sample_buffer;
	bool mGL_SGIX_texture_add_env;
	bool mGL_SGIX_texture_coordinate_clamp;
	bool mGL_SGIX_texture_lod_bias;
	bool mGL_SGIX_texture_multi_buffer;
	bool mGL_SGIX_texture_scale_bias;
	bool mGL_SGIX_texture_select;
	bool mGL_SGIX_vertex_preclip;
	bool mGL_SGIX_ycrcb;
	bool mGL_SGIX_ycrcb_subsample;
	bool mGL_SGIX_ycrcba;
	bool mGL_SGI_color_matrix;
	bool mGL_SGI_color_table;
	bool mGL_SGI_depth_pass_instrument;
	bool mGL_SGI_texture_color_table;
	bool mGL_SUNX_constant_data;
	bool mGL_SUN_convolution_border_modes;
	bool mGL_SUN_global_alpha;
	bool mGL_SUN_mesh_array;
	bool mGL_SUN_slice_accum;
	bool mGL_SUN_triangle_list;
	bool mGL_SUN_vertex;
	bool mGL_VERSION_1_2;
	bool mGL_VERSION_1_3;
	bool mGL_VERSION_1_4;
	bool mGL_WIN_phong_shading;
	bool mGL_WIN_specular_fog;
#if defined(_WIN32)
	bool mWGL_3DFX_multisample;
	bool mWGL_ARB_buffer_region;
	bool mWGL_ARB_extensions_string;
	bool mWGL_ARB_make_current_read;
	bool mWGL_ARB_multisample;
	bool mWGL_ARB_pbuffer;
	bool mWGL_ARB_pixel_format;
	bool mWGL_ARB_render_texture;
	bool mWGL_EXT_depth_float;
	bool mWGL_EXT_display_color_table;
	bool mWGL_EXT_extensions_string;
	bool mWGL_EXT_make_current_read;
	bool mWGL_EXT_multisample;
	bool mWGL_EXT_pbuffer;
	bool mWGL_EXT_pixel_format;
	bool mWGL_EXT_swap_control;
	bool mWGL_I3D_digital_video_control;
	bool mWGL_I3D_gamma;
	bool mWGL_I3D_genlock;
	bool mWGL_I3D_image_buffer;
	bool mWGL_I3D_swap_frame_lock;
	bool mWGL_I3D_swap_frame_usage;
	bool mWGL_NV_vertex_array_range;
	bool mWGL_OML_sync_control;
#endif //_WIN32
};

class GLExtensionReg
{
private:
#if defined(_WIN32)
	HDC	mHDC;
#endif //_WIN32
	GLExtGenExtensions	mExtensions;

public:
	bool Has_GL_3DFX_multisample() const { return mExtensions.mGL_3DFX_multisample; }
	bool Has_GL_3DFX_tbuffer() const { return mExtensions.mGL_3DFX_tbuffer; }
	bool Has_GL_3DFX_texture_compression_FXT1() const { return mExtensions.mGL_3DFX_texture_compression_FXT1; }
	bool Has_GL_APPLE_specular_vector() const { return mExtensions.mGL_APPLE_specular_vector; }
	bool Has_GL_APPLE_transform_hint() const { return mExtensions.mGL_APPLE_transform_hint; }
	bool Has_GL_ARB_depth_texture() const { return mExtensions.mGL_ARB_depth_texture; }
	bool Has_GL_ARB_imaging() const { return mExtensions.mGL_ARB_imaging; }
	bool Has_GL_ARB_matrix_palette() const { return mExtensions.mGL_ARB_matrix_palette; }
	bool Has_GL_ARB_multisample() const { return mExtensions.mGL_ARB_multisample; }
	bool Has_GL_ARB_multitexture() const { return mExtensions.mGL_ARB_multitexture; }
	bool Has_GL_ARB_point_parameters() const { return mExtensions.mGL_ARB_point_parameters; }
	bool Has_GL_ARB_shadow() const { return mExtensions.mGL_ARB_shadow; }
	bool Has_GL_ARB_shadow_ambient() const { return mExtensions.mGL_ARB_shadow_ambient; }
	bool Has_GL_ARB_texture_border_clamp() const { return mExtensions.mGL_ARB_texture_border_clamp; }
	bool Has_GL_ARB_texture_compression() const { return mExtensions.mGL_ARB_texture_compression; }
	bool Has_GL_ARB_texture_cube_map() const { return mExtensions.mGL_ARB_texture_cube_map; }
	bool Has_GL_ARB_texture_env_add() const { return mExtensions.mGL_ARB_texture_env_add; }
	bool Has_GL_ARB_texture_env_combine() const { return mExtensions.mGL_ARB_texture_env_combine; }
	bool Has_GL_ARB_texture_env_crossbar() const { return mExtensions.mGL_ARB_texture_env_crossbar; }
	bool Has_GL_ARB_texture_env_dot3() const { return mExtensions.mGL_ARB_texture_env_dot3; }
	bool Has_GL_ARB_texture_mirror_repeat() const { return mExtensions.mGL_ARB_texture_mirror_repeat; }
	bool Has_GL_ARB_texture_mirrored_repeat() const { return mExtensions.mGL_ARB_texture_mirrored_repeat; }
	bool Has_GL_ARB_transpose_matrix() const { return mExtensions.mGL_ARB_transpose_matrix; }
	bool Has_GL_ARB_vertex_blend() const { return mExtensions.mGL_ARB_vertex_blend; }
	bool Has_GL_ARB_window_pos() const { return mExtensions.mGL_ARB_window_pos; }
	bool Has_GL_ATI_element_array() const { return mExtensions.mGL_ATI_element_array; }
	bool Has_GL_ATI_envmap_bumpmap() const { return mExtensions.mGL_ATI_envmap_bumpmap; }
	bool Has_GL_ATI_fragment_shader() const { return mExtensions.mGL_ATI_fragment_shader; }
	bool Has_GL_ATI_pn_triangles() const { return mExtensions.mGL_ATI_pn_triangles; }
	bool Has_GL_ATI_texture_mirror_once() const { return mExtensions.mGL_ATI_texture_mirror_once; }
	bool Has_GL_ATI_vertex_array_object() const { return mExtensions.mGL_ATI_vertex_array_object; }
	bool Has_GL_ATI_vertex_streams() const { return mExtensions.mGL_ATI_vertex_streams; }
	bool Has_GL_EXT_422_pixels() const { return mExtensions.mGL_EXT_422_pixels; }
	bool Has_GL_EXT_abgr() const { return mExtensions.mGL_EXT_abgr; }
	bool Has_GL_EXT_bgra() const { return mExtensions.mGL_EXT_bgra; }
	bool Has_GL_EXT_blend_color() const { return mExtensions.mGL_EXT_blend_color; }
	bool Has_GL_EXT_blend_func_separate() const { return mExtensions.mGL_EXT_blend_func_separate; }
	bool Has_GL_EXT_blend_logic_op() const { return mExtensions.mGL_EXT_blend_logic_op; }
	bool Has_GL_EXT_blend_minmax() const { return mExtensions.mGL_EXT_blend_minmax; }
	bool Has_GL_EXT_blend_subtract() const { return mExtensions.mGL_EXT_blend_subtract; }
	bool Has_GL_EXT_clip_volume_hint() const { return mExtensions.mGL_EXT_clip_volume_hint; }
	bool Has_GL_EXT_cmyka() const { return mExtensions.mGL_EXT_cmyka; }
	bool Has_GL_EXT_color_matrix() const { return mExtensions.mGL_EXT_color_matrix; }
	bool Has_GL_EXT_color_subtable() const { return mExtensions.mGL_EXT_color_subtable; }
	bool Has_GL_EXT_compiled_vertex_array() const { return mExtensions.mGL_EXT_compiled_vertex_array; }
	bool Has_GL_EXT_convolution() const { return mExtensions.mGL_EXT_convolution; }
	bool Has_GL_EXT_coordinate_frame() const { return mExtensions.mGL_EXT_coordinate_frame; }
	bool Has_GL_EXT_copy_texture() const { return mExtensions.mGL_EXT_copy_texture; }
	bool Has_GL_EXT_cull_vertex() const { return mExtensions.mGL_EXT_cull_vertex; }
	bool Has_GL_EXT_draw_range_elements() const { return mExtensions.mGL_EXT_draw_range_elements; }
	bool Has_GL_EXT_fog_coord() const { return mExtensions.mGL_EXT_fog_coord; }
	bool Has_GL_EXT_histogram() const { return mExtensions.mGL_EXT_histogram; }
	bool Has_GL_EXT_index_array_formats() const { return mExtensions.mGL_EXT_index_array_formats; }
	bool Has_GL_EXT_index_func() const { return mExtensions.mGL_EXT_index_func; }
	bool Has_GL_EXT_index_material() const { return mExtensions.mGL_EXT_index_material; }
	bool Has_GL_EXT_index_texture() const { return mExtensions.mGL_EXT_index_texture; }
	bool Has_GL_EXT_light_texture() const { return mExtensions.mGL_EXT_light_texture; }
	bool Has_GL_EXT_misc_attribute() const { return mExtensions.mGL_EXT_misc_attribute; }
	bool Has_GL_EXT_multi_draw_arrays() const { return mExtensions.mGL_EXT_multi_draw_arrays; }
	bool Has_GL_EXT_multisample() const { return mExtensions.mGL_EXT_multisample; }
	bool Has_GL_EXT_packed_pixels() const { return mExtensions.mGL_EXT_packed_pixels; }
	bool Has_GL_EXT_paletted_texture() const { return mExtensions.mGL_EXT_paletted_texture; }
	bool Has_GL_EXT_pixel_transform() const { return mExtensions.mGL_EXT_pixel_transform; }
	bool Has_GL_EXT_pixel_transform_color_table() const { return mExtensions.mGL_EXT_pixel_transform_color_table; }
	bool Has_GL_EXT_point_parameters() const { return mExtensions.mGL_EXT_point_parameters; }
	bool Has_GL_EXT_polygon_offset() const { return mExtensions.mGL_EXT_polygon_offset; }
	bool Has_GL_EXT_rescale_normal() const { return mExtensions.mGL_EXT_rescale_normal; }
	bool Has_GL_EXT_secondary_color() const { return mExtensions.mGL_EXT_secondary_color; }
	bool Has_GL_EXT_separate_specular_color() const { return mExtensions.mGL_EXT_separate_specular_color; }
	bool Has_GL_EXT_shadow_funcs() const { return mExtensions.mGL_EXT_shadow_funcs; }
	bool Has_GL_EXT_shared_texture_palette() const { return mExtensions.mGL_EXT_shared_texture_palette; }
	bool Has_GL_EXT_stencil_two_side() const { return mExtensions.mGL_EXT_stencil_two_side; }
	bool Has_GL_EXT_stencil_wrap() const { return mExtensions.mGL_EXT_stencil_wrap; }
	bool Has_GL_EXT_subtexture() const { return mExtensions.mGL_EXT_subtexture; }
	bool Has_GL_EXT_texture() const { return mExtensions.mGL_EXT_texture; }
	bool Has_GL_EXT_texture3D() const { return mExtensions.mGL_EXT_texture3D; }
	bool Has_GL_EXT_texture_compression_s3tc() const { return mExtensions.mGL_EXT_texture_compression_s3tc; }
	bool Has_GL_EXT_texture_cube_map() const { return mExtensions.mGL_EXT_texture_cube_map; }
	bool Has_GL_EXT_texture_env_add() const { return mExtensions.mGL_EXT_texture_env_add; }
	bool Has_GL_EXT_texture_env_combine() const { return mExtensions.mGL_EXT_texture_env_combine; }
	bool Has_GL_EXT_texture_env_dot3() const { return mExtensions.mGL_EXT_texture_env_dot3; }
	bool Has_GL_EXT_texture_filter_anisotropic() const { return mExtensions.mGL_EXT_texture_filter_anisotropic; }
	bool Has_GL_EXT_texture_lod_bias() const { return mExtensions.mGL_EXT_texture_lod_bias; }
	bool Has_GL_EXT_texture_object() const { return mExtensions.mGL_EXT_texture_object; }
	bool Has_GL_EXT_texture_perturb_normal() const { return mExtensions.mGL_EXT_texture_perturb_normal; }
	bool Has_GL_EXT_vertex_array() const { return mExtensions.mGL_EXT_vertex_array; }
	bool Has_GL_EXT_vertex_shader() const { return mExtensions.mGL_EXT_vertex_shader; }
	bool Has_GL_EXT_vertex_weighting() const { return mExtensions.mGL_EXT_vertex_weighting; }
	bool Has_GL_FfdMaskSGIX() const { return mExtensions.mGL_FfdMaskSGIX; }
	bool Has_GL_HP_convolution_border_modes() const { return mExtensions.mGL_HP_convolution_border_modes; }
	bool Has_GL_HP_image_transform() const { return mExtensions.mGL_HP_image_transform; }
	bool Has_GL_HP_occlusion_test() const { return mExtensions.mGL_HP_occlusion_test; }
	bool Has_GL_HP_texture_lighting() const { return mExtensions.mGL_HP_texture_lighting; }
	bool Has_GL_IBM_cull_vertex() const { return mExtensions.mGL_IBM_cull_vertex; }
	bool Has_GL_IBM_multimode_draw_arrays() const { return mExtensions.mGL_IBM_multimode_draw_arrays; }
	bool Has_GL_IBM_rasterpos_clip() const { return mExtensions.mGL_IBM_rasterpos_clip; }
	bool Has_GL_IBM_texture_mirrored_repeat() const { return mExtensions.mGL_IBM_texture_mirrored_repeat; }
	bool Has_GL_IBM_vertex_array_lists() const { return mExtensions.mGL_IBM_vertex_array_lists; }
	bool Has_GL_INGR_color_clamp() const { return mExtensions.mGL_INGR_color_clamp; }
	bool Has_GL_INGR_interlace_read() const { return mExtensions.mGL_INGR_interlace_read; }
	bool Has_GL_INGR_palette_buffer() const { return mExtensions.mGL_INGR_palette_buffer; }
	bool Has_GL_INTEL_parallel_arrays() const { return mExtensions.mGL_INTEL_parallel_arrays; }
	bool Has_GL_INTEL_texture_scissor() const { return mExtensions.mGL_INTEL_texture_scissor; }
	bool Has_GL_MESA_resize_buffers() const { return mExtensions.mGL_MESA_resize_buffers; }
	bool Has_GL_MESA_window_pos() const { return mExtensions.mGL_MESA_window_pos; }
	bool Has_GL_NV_blend_square() const { return mExtensions.mGL_NV_blend_square; }
	bool Has_GL_NV_copy_depth_to_color() const { return mExtensions.mGL_NV_copy_depth_to_color; }
	bool Has_GL_NV_depth_clamp() const { return mExtensions.mGL_NV_depth_clamp; }
	bool Has_GL_NV_evaluators() const { return mExtensions.mGL_NV_evaluators; }
	bool Has_GL_NV_fence() const { return mExtensions.mGL_NV_fence; }
	bool Has_GL_NV_fog_distance() const { return mExtensions.mGL_NV_fog_distance; }
	bool Has_GL_NV_light_max_exponent() const { return mExtensions.mGL_NV_light_max_exponent; }
	bool Has_GL_NV_multisample_filter_hint() const { return mExtensions.mGL_NV_multisample_filter_hint; }
	bool Has_GL_NV_occlusion_query() const { return mExtensions.mGL_NV_occlusion_query; }
	bool Has_GL_NV_packed_depth_stencil() const { return mExtensions.mGL_NV_packed_depth_stencil; }
	bool Has_GL_NV_point_sprite() const { return mExtensions.mGL_NV_point_sprite; }
	bool Has_GL_NV_register_combiners() const { return mExtensions.mGL_NV_register_combiners; }
	bool Has_GL_NV_register_combiners2() const { return mExtensions.mGL_NV_register_combiners2; }
	bool Has_GL_NV_texgen_emboss() const { return mExtensions.mGL_NV_texgen_emboss; }
	bool Has_GL_NV_texgen_reflection() const { return mExtensions.mGL_NV_texgen_reflection; }
	bool Has_GL_NV_texture_compression_vtc() const { return mExtensions.mGL_NV_texture_compression_vtc; }
	bool Has_GL_NV_texture_env_combine4() const { return mExtensions.mGL_NV_texture_env_combine4; }
	bool Has_GL_NV_texture_rectangle() const { return mExtensions.mGL_NV_texture_rectangle; }
	bool Has_GL_NV_texture_shader() const { return mExtensions.mGL_NV_texture_shader; }
	bool Has_GL_NV_texture_shader2() const { return mExtensions.mGL_NV_texture_shader2; }
	bool Has_GL_NV_texture_shader3() const { return mExtensions.mGL_NV_texture_shader3; }
	bool Has_GL_NV_vertex_array_range() const { return mExtensions.mGL_NV_vertex_array_range; }
	bool Has_GL_NV_vertex_array_range2() const { return mExtensions.mGL_NV_vertex_array_range2; }
	bool Has_GL_NV_vertex_program() const { return mExtensions.mGL_NV_vertex_program; }
	bool Has_GL_NV_vertex_program1_1() const { return mExtensions.mGL_NV_vertex_program1_1; }
	bool Has_GL_OML_interlace() const { return mExtensions.mGL_OML_interlace; }
	bool Has_GL_OML_resample() const { return mExtensions.mGL_OML_resample; }
	bool Has_GL_OML_subsample() const { return mExtensions.mGL_OML_subsample; }
	bool Has_GL_PGI_misc_hints() const { return mExtensions.mGL_PGI_misc_hints; }
	bool Has_GL_PGI_vertex_hints() const { return mExtensions.mGL_PGI_vertex_hints; }
	bool Has_GL_REND_screen_coordinates() const { return mExtensions.mGL_REND_screen_coordinates; }
	bool Has_GL_SGIS_detail_texture() const { return mExtensions.mGL_SGIS_detail_texture; }
	bool Has_GL_SGIS_fog_function() const { return mExtensions.mGL_SGIS_fog_function; }
	bool Has_GL_SGIS_generate_mipmap() const { return mExtensions.mGL_SGIS_generate_mipmap; }
	bool Has_GL_SGIS_multisample() const { return mExtensions.mGL_SGIS_multisample; }
	bool Has_GL_SGIS_pixel_texture() const { return mExtensions.mGL_SGIS_pixel_texture; }
	bool Has_GL_SGIS_point_line_texgen() const { return mExtensions.mGL_SGIS_point_line_texgen; }
	bool Has_GL_SGIS_point_parameters() const { return mExtensions.mGL_SGIS_point_parameters; }
	bool Has_GL_SGIS_sharpen_texture() const { return mExtensions.mGL_SGIS_sharpen_texture; }
	bool Has_GL_SGIS_texture4D() const { return mExtensions.mGL_SGIS_texture4D; }
	bool Has_GL_SGIS_texture_border_clamp() const { return mExtensions.mGL_SGIS_texture_border_clamp; }
	bool Has_GL_SGIS_texture_color_mask() const { return mExtensions.mGL_SGIS_texture_color_mask; }
	bool Has_GL_SGIS_texture_edge_clamp() const { return mExtensions.mGL_SGIS_texture_edge_clamp; }
	bool Has_GL_SGIS_texture_filter4() const { return mExtensions.mGL_SGIS_texture_filter4; }
	bool Has_GL_SGIS_texture_lod() const { return mExtensions.mGL_SGIS_texture_lod; }
	bool Has_GL_SGIS_texture_select() const { return mExtensions.mGL_SGIS_texture_select; }
	bool Has_GL_SGIX_async() const { return mExtensions.mGL_SGIX_async; }
	bool Has_GL_SGIX_async_histogram() const { return mExtensions.mGL_SGIX_async_histogram; }
	bool Has_GL_SGIX_async_pixel() const { return mExtensions.mGL_SGIX_async_pixel; }
	bool Has_GL_SGIX_blend_alpha_minmax() const { return mExtensions.mGL_SGIX_blend_alpha_minmax; }
	bool Has_GL_SGIX_calligraphic_fragment() const { return mExtensions.mGL_SGIX_calligraphic_fragment; }
	bool Has_GL_SGIX_clipmap() const { return mExtensions.mGL_SGIX_clipmap; }
	bool Has_GL_SGIX_convolution_accuracy() const { return mExtensions.mGL_SGIX_convolution_accuracy; }
	bool Has_GL_SGIX_depth_pass_instrument() const { return mExtensions.mGL_SGIX_depth_pass_instrument; }
	bool Has_GL_SGIX_depth_texture() const { return mExtensions.mGL_SGIX_depth_texture; }
	bool Has_GL_SGIX_flush_raster() const { return mExtensions.mGL_SGIX_flush_raster; }
	bool Has_GL_SGIX_fog_offset() const { return mExtensions.mGL_SGIX_fog_offset; }
	bool Has_GL_SGIX_fog_scale() const { return mExtensions.mGL_SGIX_fog_scale; }
	bool Has_GL_SGIX_fragment_lighting() const { return mExtensions.mGL_SGIX_fragment_lighting; }
	bool Has_GL_SGIX_framezoom() const { return mExtensions.mGL_SGIX_framezoom; }
	bool Has_GL_SGIX_igloo_interface() const { return mExtensions.mGL_SGIX_igloo_interface; }
	bool Has_GL_SGIX_impact_pixel_texture() const { return mExtensions.mGL_SGIX_impact_pixel_texture; }
	bool Has_GL_SGIX_instruments() const { return mExtensions.mGL_SGIX_instruments; }
	bool Has_GL_SGIX_interlace() const { return mExtensions.mGL_SGIX_interlace; }
	bool Has_GL_SGIX_ir_instrument1() const { return mExtensions.mGL_SGIX_ir_instrument1; }
	bool Has_GL_SGIX_list_priority() const { return mExtensions.mGL_SGIX_list_priority; }
	bool Has_GL_SGIX_pixel_texture() const { return mExtensions.mGL_SGIX_pixel_texture; }
	bool Has_GL_SGIX_pixel_tiles() const { return mExtensions.mGL_SGIX_pixel_tiles; }
	bool Has_GL_SGIX_polynomial_ffd() const { return mExtensions.mGL_SGIX_polynomial_ffd; }
	bool Has_GL_SGIX_reference_plane() const { return mExtensions.mGL_SGIX_reference_plane; }
	bool Has_GL_SGIX_resample() const { return mExtensions.mGL_SGIX_resample; }
	bool Has_GL_SGIX_scalebias_hint() const { return mExtensions.mGL_SGIX_scalebias_hint; }
	bool Has_GL_SGIX_shadow() const { return mExtensions.mGL_SGIX_shadow; }
	bool Has_GL_SGIX_shadow_ambient() const { return mExtensions.mGL_SGIX_shadow_ambient; }
	bool Has_GL_SGIX_sprite() const { return mExtensions.mGL_SGIX_sprite; }
	bool Has_GL_SGIX_subsample() const { return mExtensions.mGL_SGIX_subsample; }
	bool Has_GL_SGIX_tag_sample_buffer() const { return mExtensions.mGL_SGIX_tag_sample_buffer; }
	bool Has_GL_SGIX_texture_add_env() const { return mExtensions.mGL_SGIX_texture_add_env; }
	bool Has_GL_SGIX_texture_coordinate_clamp() const { return mExtensions.mGL_SGIX_texture_coordinate_clamp; }
	bool Has_GL_SGIX_texture_lod_bias() const { return mExtensions.mGL_SGIX_texture_lod_bias; }
	bool Has_GL_SGIX_texture_multi_buffer() const { return mExtensions.mGL_SGIX_texture_multi_buffer; }
	bool Has_GL_SGIX_texture_scale_bias() const { return mExtensions.mGL_SGIX_texture_scale_bias; }
	bool Has_GL_SGIX_texture_select() const { return mExtensions.mGL_SGIX_texture_select; }
	bool Has_GL_SGIX_vertex_preclip() const { return mExtensions.mGL_SGIX_vertex_preclip; }
	bool Has_GL_SGIX_ycrcb() const { return mExtensions.mGL_SGIX_ycrcb; }
	bool Has_GL_SGIX_ycrcb_subsample() const { return mExtensions.mGL_SGIX_ycrcb_subsample; }
	bool Has_GL_SGIX_ycrcba() const { return mExtensions.mGL_SGIX_ycrcba; }
	bool Has_GL_SGI_color_matrix() const { return mExtensions.mGL_SGI_color_matrix; }
	bool Has_GL_SGI_color_table() const { return mExtensions.mGL_SGI_color_table; }
	bool Has_GL_SGI_depth_pass_instrument() const { return mExtensions.mGL_SGI_depth_pass_instrument; }
	bool Has_GL_SGI_texture_color_table() const { return mExtensions.mGL_SGI_texture_color_table; }
	bool Has_GL_SUNX_constant_data() const { return mExtensions.mGL_SUNX_constant_data; }
	bool Has_GL_SUN_convolution_border_modes() const { return mExtensions.mGL_SUN_convolution_border_modes; }
	bool Has_GL_SUN_global_alpha() const { return mExtensions.mGL_SUN_global_alpha; }
	bool Has_GL_SUN_mesh_array() const { return mExtensions.mGL_SUN_mesh_array; }
	bool Has_GL_SUN_slice_accum() const { return mExtensions.mGL_SUN_slice_accum; }
	bool Has_GL_SUN_triangle_list() const { return mExtensions.mGL_SUN_triangle_list; }
	bool Has_GL_SUN_vertex() const { return mExtensions.mGL_SUN_vertex; }
	bool Has_GL_VERSION_1_2() const { return mExtensions.mGL_VERSION_1_2; }
	bool Has_GL_VERSION_1_3() const { return mExtensions.mGL_VERSION_1_3; }
	bool Has_GL_VERSION_1_4() const { return mExtensions.mGL_VERSION_1_4; }
	bool Has_GL_WIN_phong_shading() const { return mExtensions.mGL_WIN_phong_shading; }
	bool Has_GL_WIN_specular_fog() const { return mExtensions.mGL_WIN_specular_fog; }
#if defined(_WIN32)
	bool Has_WGL_3DFX_multisample() const { return mExtensions.mWGL_3DFX_multisample; }
	bool Has_WGL_ARB_buffer_region() const { return mExtensions.mWGL_ARB_buffer_region; }
	bool Has_WGL_ARB_extensions_string() const { return mExtensions.mWGL_ARB_extensions_string; }
	bool Has_WGL_ARB_make_current_read() const { return mExtensions.mWGL_ARB_make_current_read; }
	bool Has_WGL_ARB_multisample() const { return mExtensions.mWGL_ARB_multisample; }
	bool Has_WGL_ARB_pbuffer() const { return mExtensions.mWGL_ARB_pbuffer; }
	bool Has_WGL_ARB_pixel_format() const { return mExtensions.mWGL_ARB_pixel_format; }
	bool Has_WGL_ARB_render_texture() const { return mExtensions.mWGL_ARB_render_texture; }
	bool Has_WGL_EXT_depth_float() const { return mExtensions.mWGL_EXT_depth_float; }
	bool Has_WGL_EXT_display_color_table() const { return mExtensions.mWGL_EXT_display_color_table; }
	bool Has_WGL_EXT_extensions_string() const { return mExtensions.mWGL_EXT_extensions_string; }
	bool Has_WGL_EXT_make_current_read() const { return mExtensions.mWGL_EXT_make_current_read; }
	bool Has_WGL_EXT_multisample() const { return mExtensions.mWGL_EXT_multisample; }
	bool Has_WGL_EXT_pbuffer() const { return mExtensions.mWGL_EXT_pbuffer; }
	bool Has_WGL_EXT_pixel_format() const { return mExtensions.mWGL_EXT_pixel_format; }
	bool Has_WGL_EXT_swap_control() const { return mExtensions.mWGL_EXT_swap_control; }
	bool Has_WGL_I3D_digital_video_control() const { return mExtensions.mWGL_I3D_digital_video_control; }
	bool Has_WGL_I3D_gamma() const { return mExtensions.mWGL_I3D_gamma; }
	bool Has_WGL_I3D_genlock() const { return mExtensions.mWGL_I3D_genlock; }
	bool Has_WGL_I3D_image_buffer() const { return mExtensions.mWGL_I3D_image_buffer; }
	bool Has_WGL_I3D_swap_frame_lock() const { return mExtensions.mWGL_I3D_swap_frame_lock; }
	bool Has_WGL_I3D_swap_frame_usage() const { return mExtensions.mWGL_I3D_swap_frame_usage; }
	bool Has_WGL_NV_vertex_array_range() const { return mExtensions.mWGL_NV_vertex_array_range; }
	bool Has_WGL_OML_sync_control() const { return mExtensions.mWGL_OML_sync_control; }
#endif //_WIN32
	GLExtensionReg();
	~GLExtensionReg();
	void Init(GLExtGenFunctionPointers *funPtr = 0, GLExtGenExtensions *ext = 0);
	bool 	QueryGLExtension(const char *name);
#if defined(_WIN32)
	bool 	QueryWGLExtension(const char *name);
	HDC		GetHDC() const {	return mHDC;	}
	void	SetHDC(HDC hdc){	mHDC = hdc;		}
#endif //_WIN32
};

#ifdef GL_3DFX_tbuffer
extern PFNGLTBUFFERMASK3DFXPROC glTbufferMask3DFX;
#endif //GL_3DFX_tbuffer

#ifdef GL_ARB_imaging
extern PFNGLBLENDCOLORPROC glBlendColor;
extern PFNGLBLENDEQUATIONPROC glBlendEquation;
extern PFNGLCOLORTABLEPROC glColorTable;
extern PFNGLCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
extern PFNGLCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
extern PFNGLCOPYCOLORTABLEPROC glCopyColorTable;
extern PFNGLGETCOLORTABLEPROC glGetColorTable;
extern PFNGLGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
extern PFNGLGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
extern PFNGLCOLORSUBTABLEPROC glColorSubTable;
extern PFNGLCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
extern PFNGLCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
extern PFNGLCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
extern PFNGLCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
extern PFNGLCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
extern PFNGLCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
extern PFNGLCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
extern PFNGLCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
extern PFNGLCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
extern PFNGLGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
extern PFNGLGETSEPARABLEFILTERPROC glGetSeparableFilter;
extern PFNGLSEPARABLEFILTER2DPROC glSeparableFilter2D;
extern PFNGLGETHISTOGRAMPROC glGetHistogram;
extern PFNGLGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
extern PFNGLGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
extern PFNGLGETMINMAXPROC glGetMinmax;
extern PFNGLGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
extern PFNGLGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
extern PFNGLHISTOGRAMPROC glHistogram;
extern PFNGLMINMAXPROC glMinmax;
extern PFNGLRESETHISTOGRAMPROC glResetHistogram;
extern PFNGLRESETMINMAXPROC glResetMinmax;
#endif //GL_ARB_imaging

#ifdef GL_ARB_matrix_palette
extern PFNGLCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
extern PFNGLMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
extern PFNGLMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
extern PFNGLMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
extern PFNGLMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
#endif //GL_ARB_matrix_palette

#ifdef GL_ARB_multisample
extern PFNGLSAMPLECOVERAGEARBPROC glSampleCoverageARB;
#endif //GL_ARB_multisample

#ifdef GL_ARB_multitexture
extern PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;
extern PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
extern PFNGLMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
extern PFNGLMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
extern PFNGLMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
extern PFNGLMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
extern PFNGLMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
extern PFNGLMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
extern PFNGLMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
extern PFNGLMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
extern PFNGLMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
extern PFNGLMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
extern PFNGLMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
extern PFNGLMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
extern PFNGLMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
extern PFNGLMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
extern PFNGLMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
extern PFNGLMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
extern PFNGLMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
extern PFNGLMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
extern PFNGLMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
extern PFNGLMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
extern PFNGLMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
extern PFNGLMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
extern PFNGLMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
extern PFNGLMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
extern PFNGLMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
extern PFNGLMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
extern PFNGLMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
extern PFNGLMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
extern PFNGLMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
extern PFNGLMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
extern PFNGLMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
extern PFNGLMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
#endif //GL_ARB_multitexture

#ifdef GL_ARB_point_parameters
extern PFNGLPOINTPARAMETERFARBPROC glPointParameterfARB;
extern PFNGLPOINTPARAMETERFVARBPROC glPointParameterfvARB;
#endif //GL_ARB_point_parameters

#ifdef GL_ARB_texture_compression
extern PFNGLCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
extern PFNGLCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
extern PFNGLCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
#endif //GL_ARB_texture_compression

#ifdef GL_ARB_transpose_matrix
extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glLoadTransposeMatrixfARB;
extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glLoadTransposeMatrixdARB;
extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glMultTransposeMatrixfARB;
extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glMultTransposeMatrixdARB;
#endif //GL_ARB_transpose_matrix

#ifdef GL_ARB_vertex_blend
extern PFNGLWEIGHTBVARBPROC glWeightbvARB;
extern PFNGLWEIGHTSVARBPROC glWeightsvARB;
extern PFNGLWEIGHTIVARBPROC glWeightivARB;
extern PFNGLWEIGHTFVARBPROC glWeightfvARB;
extern PFNGLWEIGHTDVARBPROC glWeightdvARB;
extern PFNGLWEIGHTUBVARBPROC glWeightubvARB;
extern PFNGLWEIGHTUSVARBPROC glWeightusvARB;
extern PFNGLWEIGHTUIVARBPROC glWeightuivARB;
extern PFNGLWEIGHTPOINTERARBPROC glWeightPointerARB;
extern PFNGLVERTEXBLENDARBPROC glVertexBlendARB;
#endif //GL_ARB_vertex_blend

#ifdef GL_ARB_window_pos
extern PFNGLWINDOWPOS2DARBPROC glWindowPos2dARB;
extern PFNGLWINDOWPOS2DVARBPROC glWindowPos2dvARB;
extern PFNGLWINDOWPOS2FARBPROC glWindowPos2fARB;
extern PFNGLWINDOWPOS2FVARBPROC glWindowPos2fvARB;
extern PFNGLWINDOWPOS2IARBPROC glWindowPos2iARB;
extern PFNGLWINDOWPOS2IVARBPROC glWindowPos2ivARB;
extern PFNGLWINDOWPOS2SARBPROC glWindowPos2sARB;
extern PFNGLWINDOWPOS2SVARBPROC glWindowPos2svARB;
extern PFNGLWINDOWPOS3DARBPROC glWindowPos3dARB;
extern PFNGLWINDOWPOS3DVARBPROC glWindowPos3dvARB;
extern PFNGLWINDOWPOS3FARBPROC glWindowPos3fARB;
extern PFNGLWINDOWPOS3FVARBPROC glWindowPos3fvARB;
extern PFNGLWINDOWPOS3IARBPROC glWindowPos3iARB;
extern PFNGLWINDOWPOS3IVARBPROC glWindowPos3ivARB;
extern PFNGLWINDOWPOS3SARBPROC glWindowPos3sARB;
extern PFNGLWINDOWPOS3SVARBPROC glWindowPos3svARB;
#endif //GL_ARB_window_pos

#ifdef GL_ATI_element_array
extern PFNGLELEMENTPOINTERATIPROC glElementPointerATI;
extern PFNGLDRAWELEMENTARRAYATIPROC glDrawElementArrayATI;
extern PFNGLDRAWRANGEELEMENTARRAYATIPROC glDrawRangeElementArrayATI;
#endif //GL_ATI_element_array

#ifdef GL_ATI_envmap_bumpmap
extern PFNGLTEXBUMPPARAMETERIVATIPROC glTexBumpParameterivATI;
extern PFNGLTEXBUMPPARAMETERFVATIPROC glTexBumpParameterfvATI;
extern PFNGLGETTEXBUMPPARAMETERIVATIPROC glGetTexBumpParameterivATI;
extern PFNGLGETTEXBUMPPARAMETERFVATIPROC glGetTexBumpParameterfvATI;
#endif //GL_ATI_envmap_bumpmap

#ifdef GL_ATI_fragment_shader
extern PFNGLGENFRAGMENTSHADERSATIPROC glGenFragmentShadersATI;
extern PFNGLBINDFRAGMENTSHADERATIPROC glBindFragmentShaderATI;
extern PFNGLDELETEFRAGMENTSHADERATIPROC glDeleteFragmentShaderATI;
extern PFNGLBEGINFRAGMENTSHADERATIPROC glBeginFragmentShaderATI;
extern PFNGLENDFRAGMENTSHADERATIPROC glEndFragmentShaderATI;
extern PFNGLPASSTEXCOORDATIPROC glPassTexCoordATI;
extern PFNGLSAMPLEMAPATIPROC glSampleMapATI;
extern PFNGLCOLORFRAGMENTOP1ATIPROC glColorFragmentOp1ATI;
extern PFNGLCOLORFRAGMENTOP2ATIPROC glColorFragmentOp2ATI;
extern PFNGLCOLORFRAGMENTOP3ATIPROC glColorFragmentOp3ATI;
extern PFNGLALPHAFRAGMENTOP1ATIPROC glAlphaFragmentOp1ATI;
extern PFNGLALPHAFRAGMENTOP2ATIPROC glAlphaFragmentOp2ATI;
extern PFNGLALPHAFRAGMENTOP3ATIPROC glAlphaFragmentOp3ATI;
extern PFNGLSETFRAGMENTSHADERCONSTANTATIPROC glSetFragmentShaderConstantATI;
#endif //GL_ATI_fragment_shader

#ifdef GL_ATI_pn_triangles
extern PFNGLPNTRIANGLESIATIPROC glPNTrianglesiATI;
extern PFNGLPNTRIANGLESFATIPROC glPNTrianglesfATI;
#endif //GL_ATI_pn_triangles

#ifdef GL_ATI_vertex_array_object
extern PFNGLNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
extern PFNGLISOBJECTBUFFERATIPROC glIsObjectBufferATI;
extern PFNGLUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
extern PFNGLGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
extern PFNGLGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
extern PFNGLDELETEOBJECTBUFFERATIPROC glDeleteObjectBufferATI;
extern PFNGLARRAYOBJECTATIPROC glArrayObjectATI;
extern PFNGLGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
extern PFNGLGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
extern PFNGLVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
extern PFNGLGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
extern PFNGLGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
#endif //GL_ATI_vertex_array_object

#ifdef GL_ATI_vertex_streams
extern PFNGLVERTEXSTREAM1SATIPROC glVertexStream1sATI;
extern PFNGLVERTEXSTREAM1SVATIPROC glVertexStream1svATI;
extern PFNGLVERTEXSTREAM1IATIPROC glVertexStream1iATI;
extern PFNGLVERTEXSTREAM1IVATIPROC glVertexStream1ivATI;
extern PFNGLVERTEXSTREAM1FATIPROC glVertexStream1fATI;
extern PFNGLVERTEXSTREAM1FVATIPROC glVertexStream1fvATI;
extern PFNGLVERTEXSTREAM1DATIPROC glVertexStream1dATI;
extern PFNGLVERTEXSTREAM1DVATIPROC glVertexStream1dvATI;
extern PFNGLVERTEXSTREAM2SATIPROC glVertexStream2sATI;
extern PFNGLVERTEXSTREAM2SVATIPROC glVertexStream2svATI;
extern PFNGLVERTEXSTREAM2IATIPROC glVertexStream2iATI;
extern PFNGLVERTEXSTREAM2IVATIPROC glVertexStream2ivATI;
extern PFNGLVERTEXSTREAM2FATIPROC glVertexStream2fATI;
extern PFNGLVERTEXSTREAM2FVATIPROC glVertexStream2fvATI;
extern PFNGLVERTEXSTREAM2DATIPROC glVertexStream2dATI;
extern PFNGLVERTEXSTREAM2DVATIPROC glVertexStream2dvATI;
extern PFNGLVERTEXSTREAM3SATIPROC glVertexStream3sATI;
extern PFNGLVERTEXSTREAM3SVATIPROC glVertexStream3svATI;
extern PFNGLVERTEXSTREAM3IATIPROC glVertexStream3iATI;
extern PFNGLVERTEXSTREAM3IVATIPROC glVertexStream3ivATI;
extern PFNGLVERTEXSTREAM3FATIPROC glVertexStream3fATI;
extern PFNGLVERTEXSTREAM3FVATIPROC glVertexStream3fvATI;
extern PFNGLVERTEXSTREAM3DATIPROC glVertexStream3dATI;
extern PFNGLVERTEXSTREAM3DVATIPROC glVertexStream3dvATI;
extern PFNGLVERTEXSTREAM4SATIPROC glVertexStream4sATI;
extern PFNGLVERTEXSTREAM4SVATIPROC glVertexStream4svATI;
extern PFNGLVERTEXSTREAM4IATIPROC glVertexStream4iATI;
extern PFNGLVERTEXSTREAM4IVATIPROC glVertexStream4ivATI;
extern PFNGLVERTEXSTREAM4FATIPROC glVertexStream4fATI;
extern PFNGLVERTEXSTREAM4FVATIPROC glVertexStream4fvATI;
extern PFNGLVERTEXSTREAM4DATIPROC glVertexStream4dATI;
extern PFNGLVERTEXSTREAM4DVATIPROC glVertexStream4dvATI;
extern PFNGLNORMALSTREAM3BATIPROC glNormalStream3bATI;
extern PFNGLNORMALSTREAM3BVATIPROC glNormalStream3bvATI;
extern PFNGLNORMALSTREAM3SATIPROC glNormalStream3sATI;
extern PFNGLNORMALSTREAM3SVATIPROC glNormalStream3svATI;
extern PFNGLNORMALSTREAM3IATIPROC glNormalStream3iATI;
extern PFNGLNORMALSTREAM3IVATIPROC glNormalStream3ivATI;
extern PFNGLNORMALSTREAM3FATIPROC glNormalStream3fATI;
extern PFNGLNORMALSTREAM3FVATIPROC glNormalStream3fvATI;
extern PFNGLNORMALSTREAM3DATIPROC glNormalStream3dATI;
extern PFNGLNORMALSTREAM3DVATIPROC glNormalStream3dvATI;
extern PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC glClientActiveVertexStreamATI;
extern PFNGLVERTEXBLENDENVIATIPROC glVertexBlendEnviATI;
extern PFNGLVERTEXBLENDENVFATIPROC glVertexBlendEnvfATI;
#endif //GL_ATI_vertex_streams

#ifdef GL_EXT_blend_color
extern PFNGLBLENDCOLOREXTPROC glBlendColorEXT;
#endif //GL_EXT_blend_color

#ifdef GL_EXT_blend_func_separate
extern PFNGLBLENDFUNCSEPARATEEXTPROC glBlendFuncSeparateEXT;
extern PFNGLBLENDFUNCSEPARATEINGRPROC glBlendFuncSeparateINGR;
#endif //GL_EXT_blend_func_separate

#ifdef GL_EXT_blend_minmax
extern PFNGLBLENDEQUATIONEXTPROC glBlendEquationEXT;
#endif //GL_EXT_blend_minmax

#ifdef GL_EXT_color_subtable
extern PFNGLCOLORSUBTABLEEXTPROC glColorSubTableEXT;
extern PFNGLCOPYCOLORSUBTABLEEXTPROC glCopyColorSubTableEXT;
#endif //GL_EXT_color_subtable

#ifdef GL_EXT_compiled_vertex_array
extern PFNGLLOCKARRAYSEXTPROC glLockArraysEXT;
extern PFNGLUNLOCKARRAYSEXTPROC glUnlockArraysEXT;
#endif //GL_EXT_compiled_vertex_array

#ifdef GL_EXT_convolution
extern PFNGLCONVOLUTIONFILTER1DEXTPROC glConvolutionFilter1DEXT;
extern PFNGLCONVOLUTIONFILTER2DEXTPROC glConvolutionFilter2DEXT;
extern PFNGLCONVOLUTIONPARAMETERFEXTPROC glConvolutionParameterfEXT;
extern PFNGLCONVOLUTIONPARAMETERFVEXTPROC glConvolutionParameterfvEXT;
extern PFNGLCONVOLUTIONPARAMETERIEXTPROC glConvolutionParameteriEXT;
extern PFNGLCONVOLUTIONPARAMETERIVEXTPROC glConvolutionParameterivEXT;
extern PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC glCopyConvolutionFilter1DEXT;
extern PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC glCopyConvolutionFilter2DEXT;
extern PFNGLGETCONVOLUTIONFILTEREXTPROC glGetConvolutionFilterEXT;
extern PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC glGetConvolutionParameterfvEXT;
extern PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC glGetConvolutionParameterivEXT;
extern PFNGLGETSEPARABLEFILTEREXTPROC glGetSeparableFilterEXT;
extern PFNGLSEPARABLEFILTER2DEXTPROC glSeparableFilter2DEXT;
#endif //GL_EXT_convolution

#ifdef GL_EXT_coordinate_frame
extern PFNGLTANGENT3BEXTPROC glTangent3bEXT;
extern PFNGLTANGENT3BVEXTPROC glTangent3bvEXT;
extern PFNGLTANGENT3DEXTPROC glTangent3dEXT;
extern PFNGLTANGENT3DVEXTPROC glTangent3dvEXT;
extern PFNGLTANGENT3FEXTPROC glTangent3fEXT;
extern PFNGLTANGENT3FVEXTPROC glTangent3fvEXT;
extern PFNGLTANGENT3IEXTPROC glTangent3iEXT;
extern PFNGLTANGENT3IVEXTPROC glTangent3ivEXT;
extern PFNGLTANGENT3SEXTPROC glTangent3sEXT;
extern PFNGLTANGENT3SVEXTPROC glTangent3svEXT;
extern PFNGLBINORMAL3BEXTPROC glBinormal3bEXT;
extern PFNGLBINORMAL3BVEXTPROC glBinormal3bvEXT;
extern PFNGLBINORMAL3DEXTPROC glBinormal3dEXT;
extern PFNGLBINORMAL3DVEXTPROC glBinormal3dvEXT;
extern PFNGLBINORMAL3FEXTPROC glBinormal3fEXT;
extern PFNGLBINORMAL3FVEXTPROC glBinormal3fvEXT;
extern PFNGLBINORMAL3IEXTPROC glBinormal3iEXT;
extern PFNGLBINORMAL3IVEXTPROC glBinormal3ivEXT;
extern PFNGLBINORMAL3SEXTPROC glBinormal3sEXT;
extern PFNGLBINORMAL3SVEXTPROC glBinormal3svEXT;
extern PFNGLTANGENTPOINTEREXTPROC glTangentPointerEXT;
extern PFNGLBINORMALPOINTEREXTPROC glBinormalPointerEXT;
#endif //GL_EXT_coordinate_frame

#ifdef GL_EXT_copy_texture
extern PFNGLCOPYTEXIMAGE1DEXTPROC glCopyTexImage1DEXT;
extern PFNGLCOPYTEXIMAGE2DEXTPROC glCopyTexImage2DEXT;
extern PFNGLCOPYTEXSUBIMAGE1DEXTPROC glCopyTexSubImage1DEXT;
extern PFNGLCOPYTEXSUBIMAGE2DEXTPROC glCopyTexSubImage2DEXT;
extern PFNGLCOPYTEXSUBIMAGE3DEXTPROC glCopyTexSubImage3DEXT;
#endif //GL_EXT_copy_texture

#ifdef GL_EXT_cull_vertex
extern PFNGLCULLPARAMETERDVEXTPROC glCullParameterdvEXT;
extern PFNGLCULLPARAMETERFVEXTPROC glCullParameterfvEXT;
#endif //GL_EXT_cull_vertex

#ifdef GL_EXT_draw_range_elements
extern PFNGLDRAWRANGEELEMENTSEXTPROC glDrawRangeElementsEXT;
#endif //GL_EXT_draw_range_elements

#ifdef GL_EXT_fog_coord
extern PFNGLFOGCOORDFEXTPROC glFogCoordfEXT;
extern PFNGLFOGCOORDFVEXTPROC glFogCoordfvEXT;
extern PFNGLFOGCOORDDEXTPROC glFogCoorddEXT;
extern PFNGLFOGCOORDDVEXTPROC glFogCoorddvEXT;
extern PFNGLFOGCOORDPOINTEREXTPROC glFogCoordPointerEXT;
#endif //GL_EXT_fog_coord

#ifdef GL_EXT_histogram
extern PFNGLGETHISTOGRAMEXTPROC glGetHistogramEXT;
extern PFNGLGETHISTOGRAMPARAMETERFVEXTPROC glGetHistogramParameterfvEXT;
extern PFNGLGETHISTOGRAMPARAMETERIVEXTPROC glGetHistogramParameterivEXT;
extern PFNGLGETMINMAXEXTPROC glGetMinmaxEXT;
extern PFNGLGETMINMAXPARAMETERFVEXTPROC glGetMinmaxParameterfvEXT;
extern PFNGLGETMINMAXPARAMETERIVEXTPROC glGetMinmaxParameterivEXT;
extern PFNGLHISTOGRAMEXTPROC glHistogramEXT;
extern PFNGLMINMAXEXTPROC glMinmaxEXT;
extern PFNGLRESETHISTOGRAMEXTPROC glResetHistogramEXT;
extern PFNGLRESETMINMAXEXTPROC glResetMinmaxEXT;
#endif //GL_EXT_histogram

#ifdef GL_EXT_index_func
extern PFNGLINDEXFUNCEXTPROC glIndexFuncEXT;
#endif //GL_EXT_index_func

#ifdef GL_EXT_index_material
extern PFNGLINDEXMATERIALEXTPROC glIndexMaterialEXT;
#endif //GL_EXT_index_material

#ifdef GL_EXT_light_texture
extern PFNGLAPPLYTEXTUREEXTPROC glApplyTextureEXT;
extern PFNGLTEXTURELIGHTEXTPROC glTextureLightEXT;
extern PFNGLTEXTUREMATERIALEXTPROC glTextureMaterialEXT;
#endif //GL_EXT_light_texture

#ifdef GL_EXT_multi_draw_arrays
extern PFNGLMULTIDRAWARRAYSEXTPROC glMultiDrawArraysEXT;
extern PFNGLMULTIDRAWELEMENTSEXTPROC glMultiDrawElementsEXT;
#endif //GL_EXT_multi_draw_arrays

#ifdef GL_EXT_multisample
extern PFNGLSAMPLEMASKEXTPROC glSampleMaskEXT;
extern PFNGLSAMPLEPATTERNEXTPROC glSamplePatternEXT;
#endif //GL_EXT_multisample

#ifdef GL_EXT_paletted_texture
extern PFNGLCOLORTABLEEXTPROC glColorTableEXT;
extern PFNGLGETCOLORTABLEEXTPROC glGetColorTableEXT;
extern PFNGLGETCOLORTABLEPARAMETERIVEXTPROC glGetColorTableParameterivEXT;
extern PFNGLGETCOLORTABLEPARAMETERFVEXTPROC glGetColorTableParameterfvEXT;
#endif //GL_EXT_paletted_texture

#ifdef GL_EXT_pixel_transform
extern PFNGLPIXELTRANSFORMPARAMETERIEXTPROC glPixelTransformParameteriEXT;
extern PFNGLPIXELTRANSFORMPARAMETERFEXTPROC glPixelTransformParameterfEXT;
extern PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC glPixelTransformParameterivEXT;
extern PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC glPixelTransformParameterfvEXT;
#endif //GL_EXT_pixel_transform

#ifdef GL_EXT_point_parameters
extern PFNGLPOINTPARAMETERFEXTPROC glPointParameterfEXT;
extern PFNGLPOINTPARAMETERFVEXTPROC glPointParameterfvEXT;
#endif //GL_EXT_point_parameters

#ifdef GL_EXT_polygon_offset
extern PFNGLPOLYGONOFFSETEXTPROC glPolygonOffsetEXT;
#endif //GL_EXT_polygon_offset

#ifdef GL_EXT_secondary_color
extern PFNGLSECONDARYCOLOR3BEXTPROC glSecondaryColor3bEXT;
extern PFNGLSECONDARYCOLOR3BVEXTPROC glSecondaryColor3bvEXT;
extern PFNGLSECONDARYCOLOR3DEXTPROC glSecondaryColor3dEXT;
extern PFNGLSECONDARYCOLOR3DVEXTPROC glSecondaryColor3dvEXT;
extern PFNGLSECONDARYCOLOR3FEXTPROC glSecondaryColor3fEXT;
extern PFNGLSECONDARYCOLOR3FVEXTPROC glSecondaryColor3fvEXT;
extern PFNGLSECONDARYCOLOR3IEXTPROC glSecondaryColor3iEXT;
extern PFNGLSECONDARYCOLOR3IVEXTPROC glSecondaryColor3ivEXT;
extern PFNGLSECONDARYCOLOR3SEXTPROC glSecondaryColor3sEXT;
extern PFNGLSECONDARYCOLOR3SVEXTPROC glSecondaryColor3svEXT;
extern PFNGLSECONDARYCOLOR3UBEXTPROC glSecondaryColor3ubEXT;
extern PFNGLSECONDARYCOLOR3UBVEXTPROC glSecondaryColor3ubvEXT;
extern PFNGLSECONDARYCOLOR3UIEXTPROC glSecondaryColor3uiEXT;
extern PFNGLSECONDARYCOLOR3UIVEXTPROC glSecondaryColor3uivEXT;
extern PFNGLSECONDARYCOLOR3USEXTPROC glSecondaryColor3usEXT;
extern PFNGLSECONDARYCOLOR3USVEXTPROC glSecondaryColor3usvEXT;
extern PFNGLSECONDARYCOLORPOINTEREXTPROC glSecondaryColorPointerEXT;
#endif //GL_EXT_secondary_color

#ifdef GL_EXT_stencil_two_side
extern PFNGLACTIVESTENCILFACEEXTPROC glActiveStencilFaceEXT;
#endif //GL_EXT_stencil_two_side

#ifdef GL_EXT_subtexture
extern PFNGLTEXSUBIMAGE1DEXTPROC glTexSubImage1DEXT;
extern PFNGLTEXSUBIMAGE2DEXTPROC glTexSubImage2DEXT;
#endif //GL_EXT_subtexture

#ifdef GL_EXT_texture3D
extern PFNGLTEXIMAGE3DEXTPROC glTexImage3DEXT;
extern PFNGLTEXSUBIMAGE3DEXTPROC glTexSubImage3DEXT;
#endif //GL_EXT_texture3D

#ifdef GL_EXT_texture_object
extern PFNGLARETEXTURESRESIDENTEXTPROC glAreTexturesResidentEXT;
extern PFNGLBINDTEXTUREEXTPROC glBindTextureEXT;
extern PFNGLDELETETEXTURESEXTPROC glDeleteTexturesEXT;
extern PFNGLGENTEXTURESEXTPROC glGenTexturesEXT;
extern PFNGLISTEXTUREEXTPROC glIsTextureEXT;
extern PFNGLPRIORITIZETEXTURESEXTPROC glPrioritizeTexturesEXT;
#endif //GL_EXT_texture_object

#ifdef GL_EXT_texture_perturb_normal
extern PFNGLTEXTURENORMALEXTPROC glTextureNormalEXT;
#endif //GL_EXT_texture_perturb_normal

#ifdef GL_EXT_vertex_array
extern PFNGLARRAYELEMENTEXTPROC glArrayElementEXT;
extern PFNGLCOLORPOINTEREXTPROC glColorPointerEXT;
extern PFNGLDRAWARRAYSEXTPROC glDrawArraysEXT;
extern PFNGLEDGEFLAGPOINTEREXTPROC glEdgeFlagPointerEXT;
extern PFNGLGETPOINTERVEXTPROC glGetPointervEXT;
extern PFNGLINDEXPOINTEREXTPROC glIndexPointerEXT;
extern PFNGLNORMALPOINTEREXTPROC glNormalPointerEXT;
extern PFNGLTEXCOORDPOINTEREXTPROC glTexCoordPointerEXT;
extern PFNGLVERTEXPOINTEREXTPROC glVertexPointerEXT;
#endif //GL_EXT_vertex_array

#ifdef GL_EXT_vertex_shader
extern PFNGLBEGINVERTEXSHADEREXTPROC glBeginVertexShaderEXT;
extern PFNGLENDVERTEXSHADEREXTPROC glEndVertexShaderEXT;
extern PFNGLBINDVERTEXSHADEREXTPROC glBindVertexShaderEXT;
extern PFNGLGENVERTEXSHADERSEXTPROC glGenVertexShadersEXT;
extern PFNGLDELETEVERTEXSHADEREXTPROC glDeleteVertexShaderEXT;
extern PFNGLSHADEROP1EXTPROC glShaderOp1EXT;
extern PFNGLSHADEROP2EXTPROC glShaderOp2EXT;
extern PFNGLSHADEROP3EXTPROC glShaderOp3EXT;
extern PFNGLSWIZZLEEXTPROC glSwizzleEXT;
extern PFNGLWRITEMASKEXTPROC glWriteMaskEXT;
extern PFNGLINSERTCOMPONENTEXTPROC glInsertComponentEXT;
extern PFNGLEXTRACTCOMPONENTEXTPROC glExtractComponentEXT;
extern PFNGLGENSYMBOLSEXTPROC glGenSymbolsEXT;
extern PFNGLSETINVARIANTEXTPROC glSetInvariantEXT;
extern PFNGLSETLOCALCONSTANTEXTPROC glSetLocalConstantEXT;
extern PFNGLVARIANTBVEXTPROC glVariantbvEXT;
extern PFNGLVARIANTSVEXTPROC glVariantsvEXT;
extern PFNGLVARIANTIVEXTPROC glVariantivEXT;
extern PFNGLVARIANTFVEXTPROC glVariantfvEXT;
extern PFNGLVARIANTDVEXTPROC glVariantdvEXT;
extern PFNGLVARIANTUBVEXTPROC glVariantubvEXT;
extern PFNGLVARIANTUSVEXTPROC glVariantusvEXT;
extern PFNGLVARIANTUIVEXTPROC glVariantuivEXT;
extern PFNGLVARIANTPOINTEREXTPROC glVariantPointerEXT;
extern PFNGLENABLEVARIANTCLIENTSTATEEXTPROC glEnableVariantClientStateEXT;
extern PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC glDisableVariantClientStateEXT;
extern PFNGLBINDLIGHTPARAMETEREXTPROC glBindLightParameterEXT;
extern PFNGLBINDMATERIALPARAMETEREXTPROC glBindMaterialParameterEXT;
extern PFNGLBINDTEXGENPARAMETEREXTPROC glBindTexGenParameterEXT;
extern PFNGLBINDTEXTUREUNITPARAMETEREXTPROC glBindTextureUnitParameterEXT;
extern PFNGLBINDPARAMETEREXTPROC glBindParameterEXT;
extern PFNGLISVARIANTENABLEDEXTPROC glIsVariantEnabledEXT;
extern PFNGLGETVARIANTBOOLEANVEXTPROC glGetVariantBooleanvEXT;
extern PFNGLGETVARIANTINTEGERVEXTPROC glGetVariantIntegervEXT;
extern PFNGLGETVARIANTFLOATVEXTPROC glGetVariantFloatvEXT;
extern PFNGLGETVARIANTPOINTERVEXTPROC glGetVariantPointervEXT;
extern PFNGLGETINVARIANTBOOLEANVEXTPROC glGetInvariantBooleanvEXT;
extern PFNGLGETINVARIANTINTEGERVEXTPROC glGetInvariantIntegervEXT;
extern PFNGLGETINVARIANTFLOATVEXTPROC glGetInvariantFloatvEXT;
extern PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC glGetLocalConstantBooleanvEXT;
extern PFNGLGETLOCALCONSTANTINTEGERVEXTPROC glGetLocalConstantIntegervEXT;
extern PFNGLGETLOCALCONSTANTFLOATVEXTPROC glGetLocalConstantFloatvEXT;
#endif //GL_EXT_vertex_shader

#ifdef GL_EXT_vertex_weighting
extern PFNGLVERTEXWEIGHTFEXTPROC glVertexWeightfEXT;
extern PFNGLVERTEXWEIGHTFVEXTPROC glVertexWeightfvEXT;
extern PFNGLVERTEXWEIGHTPOINTEREXTPROC glVertexWeightPointerEXT;
#endif //GL_EXT_vertex_weighting

#ifdef GL_HP_image_transform
extern PFNGLIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
extern PFNGLIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
extern PFNGLIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
extern PFNGLIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
extern PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
extern PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
#endif //GL_HP_image_transform

#ifdef GL_IBM_multimode_draw_arrays
extern PFNGLMULTIMODEDRAWARRAYSIBMPROC glMultiModeDrawArraysIBM;
extern PFNGLMULTIMODEDRAWELEMENTSIBMPROC glMultiModeDrawElementsIBM;
#endif //GL_IBM_multimode_draw_arrays

#ifdef GL_IBM_vertex_array_lists
extern PFNGLCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
extern PFNGLSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
extern PFNGLEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
extern PFNGLFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
extern PFNGLINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
extern PFNGLNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
extern PFNGLTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
extern PFNGLVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
#endif //GL_IBM_vertex_array_lists

#ifdef GL_INTEL_parallel_arrays
extern PFNGLVERTEXPOINTERVINTELPROC glVertexPointervINTEL;
extern PFNGLNORMALPOINTERVINTELPROC glNormalPointervINTEL;
extern PFNGLCOLORPOINTERVINTELPROC glColorPointervINTEL;
extern PFNGLTEXCOORDPOINTERVINTELPROC glTexCoordPointervINTEL;
#endif //GL_INTEL_parallel_arrays

#ifdef GL_MESA_resize_buffers
extern PFNGLRESIZEBUFFERSMESAPROC glResizeBuffersMESA;
#endif //GL_MESA_resize_buffers

#ifdef GL_MESA_window_pos
extern PFNGLWINDOWPOS2DMESAPROC glWindowPos2dMESA;
extern PFNGLWINDOWPOS2DVMESAPROC glWindowPos2dvMESA;
extern PFNGLWINDOWPOS2FMESAPROC glWindowPos2fMESA;
extern PFNGLWINDOWPOS2FVMESAPROC glWindowPos2fvMESA;
extern PFNGLWINDOWPOS2IMESAPROC glWindowPos2iMESA;
extern PFNGLWINDOWPOS2IVMESAPROC glWindowPos2ivMESA;
extern PFNGLWINDOWPOS2SMESAPROC glWindowPos2sMESA;
extern PFNGLWINDOWPOS2SVMESAPROC glWindowPos2svMESA;
extern PFNGLWINDOWPOS3DMESAPROC glWindowPos3dMESA;
extern PFNGLWINDOWPOS3DVMESAPROC glWindowPos3dvMESA;
extern PFNGLWINDOWPOS3FMESAPROC glWindowPos3fMESA;
extern PFNGLWINDOWPOS3FVMESAPROC glWindowPos3fvMESA;
extern PFNGLWINDOWPOS3IMESAPROC glWindowPos3iMESA;
extern PFNGLWINDOWPOS3IVMESAPROC glWindowPos3ivMESA;
extern PFNGLWINDOWPOS3SMESAPROC glWindowPos3sMESA;
extern PFNGLWINDOWPOS3SVMESAPROC glWindowPos3svMESA;
extern PFNGLWINDOWPOS4DMESAPROC glWindowPos4dMESA;
extern PFNGLWINDOWPOS4DVMESAPROC glWindowPos4dvMESA;
extern PFNGLWINDOWPOS4FMESAPROC glWindowPos4fMESA;
extern PFNGLWINDOWPOS4FVMESAPROC glWindowPos4fvMESA;
extern PFNGLWINDOWPOS4IMESAPROC glWindowPos4iMESA;
extern PFNGLWINDOWPOS4IVMESAPROC glWindowPos4ivMESA;
extern PFNGLWINDOWPOS4SMESAPROC glWindowPos4sMESA;
extern PFNGLWINDOWPOS4SVMESAPROC glWindowPos4svMESA;
#endif //GL_MESA_window_pos

#ifdef GL_NV_evaluators
extern PFNGLMAPCONTROLPOINTSNVPROC glMapControlPointsNV;
extern PFNGLMAPPARAMETERIVNVPROC glMapParameterivNV;
extern PFNGLMAPPARAMETERFVNVPROC glMapParameterfvNV;
extern PFNGLGETMAPCONTROLPOINTSNVPROC glGetMapControlPointsNV;
extern PFNGLGETMAPPARAMETERIVNVPROC glGetMapParameterivNV;
extern PFNGLGETMAPPARAMETERFVNVPROC glGetMapParameterfvNV;
extern PFNGLGETMAPATTRIBPARAMETERIVNVPROC glGetMapAttribParameterivNV;
extern PFNGLGETMAPATTRIBPARAMETERFVNVPROC glGetMapAttribParameterfvNV;
extern PFNGLEVALMAPSNVPROC glEvalMapsNV;
#endif //GL_NV_evaluators

#ifdef GL_NV_fence
extern PFNGLDELETEFENCESNVPROC glDeleteFencesNV;
extern PFNGLGENFENCESNVPROC glGenFencesNV;
extern PFNGLISFENCENVPROC glIsFenceNV;
extern PFNGLTESTFENCENVPROC glTestFenceNV;
extern PFNGLGETFENCEIVNVPROC glGetFenceivNV;
extern PFNGLFINISHFENCENVPROC glFinishFenceNV;
extern PFNGLSETFENCENVPROC glSetFenceNV;
#endif //GL_NV_fence

#ifdef GL_NV_occlusion_query
extern PFNGLGENOCCLUSIONQUERIESNVPROC glGenOcclusionQueriesNV;
extern PFNGLDELETEOCCLUSIONQUERIESNVPROC glDeleteOcclusionQueriesNV;
extern PFNGLISOCCLUSIONQUERYNVPROC glIsOcclusionQueryNV;
extern PFNGLBEGINOCCLUSIONQUERYNVPROC glBeginOcclusionQueryNV;
extern PFNGLENDOCCLUSIONQUERYNVPROC glEndOcclusionQueryNV;
extern PFNGLGETOCCLUSIONQUERYIVNVPROC glGetOcclusionQueryivNV;
extern PFNGLGETOCCLUSIONQUERYUIVNVPROC glGetOcclusionQueryuivNV;
#endif //GL_NV_occlusion_query

#ifdef GL_NV_point_sprite
extern PFNGLPOINTPARAMETERINVPROC glPointParameteriNV;
extern PFNGLPOINTPARAMETERIVNVPROC glPointParameterivNV;
#endif //GL_NV_point_sprite

#ifdef GL_NV_register_combiners
extern PFNGLCOMBINERPARAMETERFVNVPROC glCombinerParameterfvNV;
extern PFNGLCOMBINERPARAMETERFNVPROC glCombinerParameterfNV;
extern PFNGLCOMBINERPARAMETERIVNVPROC glCombinerParameterivNV;
extern PFNGLCOMBINERPARAMETERINVPROC glCombinerParameteriNV;
extern PFNGLCOMBINERINPUTNVPROC glCombinerInputNV;
extern PFNGLCOMBINEROUTPUTNVPROC glCombinerOutputNV;
extern PFNGLFINALCOMBINERINPUTNVPROC glFinalCombinerInputNV;
extern PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC glGetCombinerInputParameterfvNV;
extern PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC glGetCombinerInputParameterivNV;
extern PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC glGetCombinerOutputParameterfvNV;
extern PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC glGetCombinerOutputParameterivNV;
extern PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC glGetFinalCombinerInputParameterfvNV;
extern PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC glGetFinalCombinerInputParameterivNV;
#endif //GL_NV_register_combiners

#ifdef GL_NV_register_combiners2
extern PFNGLCOMBINERSTAGEPARAMETERFVNVPROC glCombinerStageParameterfvNV;
extern PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC glGetCombinerStageParameterfvNV;
#endif //GL_NV_register_combiners2

#ifdef GL_NV_vertex_array_range
extern PFNGLFLUSHVERTEXARRAYRANGENVPROC glFlushVertexArrayRangeNV;
extern PFNGLVERTEXARRAYRANGENVPROC glVertexArrayRangeNV;
#endif //GL_NV_vertex_array_range

#ifdef GL_NV_vertex_program
extern PFNGLAREPROGRAMSRESIDENTNVPROC glAreProgramsResidentNV;
extern PFNGLBINDPROGRAMNVPROC glBindProgramNV;
extern PFNGLDELETEPROGRAMSNVPROC glDeleteProgramsNV;
extern PFNGLEXECUTEPROGRAMNVPROC glExecuteProgramNV;
extern PFNGLGENPROGRAMSNVPROC glGenProgramsNV;
extern PFNGLGETPROGRAMPARAMETERDVNVPROC glGetProgramParameterdvNV;
extern PFNGLGETPROGRAMPARAMETERFVNVPROC glGetProgramParameterfvNV;
extern PFNGLGETPROGRAMIVNVPROC glGetProgramivNV;
extern PFNGLGETPROGRAMSTRINGNVPROC glGetProgramStringNV;
extern PFNGLGETTRACKMATRIXIVNVPROC glGetTrackMatrixivNV;
extern PFNGLGETVERTEXATTRIBDVNVPROC glGetVertexAttribdvNV;
extern PFNGLGETVERTEXATTRIBFVNVPROC glGetVertexAttribfvNV;
extern PFNGLGETVERTEXATTRIBIVNVPROC glGetVertexAttribivNV;
extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glGetVertexAttribPointervNV;
extern PFNGLISPROGRAMNVPROC glIsProgramNV;
extern PFNGLLOADPROGRAMNVPROC glLoadProgramNV;
extern PFNGLPROGRAMPARAMETER4DNVPROC glProgramParameter4dNV;
extern PFNGLPROGRAMPARAMETER4DVNVPROC glProgramParameter4dvNV;
extern PFNGLPROGRAMPARAMETER4FNVPROC glProgramParameter4fNV;
extern PFNGLPROGRAMPARAMETER4FVNVPROC glProgramParameter4fvNV;
extern PFNGLPROGRAMPARAMETERS4DVNVPROC glProgramParameters4dvNV;
extern PFNGLPROGRAMPARAMETERS4FVNVPROC glProgramParameters4fvNV;
extern PFNGLREQUESTRESIDENTPROGRAMSNVPROC glRequestResidentProgramsNV;
extern PFNGLTRACKMATRIXNVPROC glTrackMatrixNV;
extern PFNGLVERTEXATTRIBPOINTERNVPROC glVertexAttribPointerNV;
extern PFNGLVERTEXATTRIB1DNVPROC glVertexAttrib1dNV;
extern PFNGLVERTEXATTRIB1DVNVPROC glVertexAttrib1dvNV;
extern PFNGLVERTEXATTRIB1FNVPROC glVertexAttrib1fNV;
extern PFNGLVERTEXATTRIB1FVNVPROC glVertexAttrib1fvNV;
extern PFNGLVERTEXATTRIB1SNVPROC glVertexAttrib1sNV;
extern PFNGLVERTEXATTRIB1SVNVPROC glVertexAttrib1svNV;
extern PFNGLVERTEXATTRIB2DNVPROC glVertexAttrib2dNV;
extern PFNGLVERTEXATTRIB2DVNVPROC glVertexAttrib2dvNV;
extern PFNGLVERTEXATTRIB2FNVPROC glVertexAttrib2fNV;
extern PFNGLVERTEXATTRIB2FVNVPROC glVertexAttrib2fvNV;
extern PFNGLVERTEXATTRIB2SNVPROC glVertexAttrib2sNV;
extern PFNGLVERTEXATTRIB2SVNVPROC glVertexAttrib2svNV;
extern PFNGLVERTEXATTRIB3DNVPROC glVertexAttrib3dNV;
extern PFNGLVERTEXATTRIB3DVNVPROC glVertexAttrib3dvNV;
extern PFNGLVERTEXATTRIB3FNVPROC glVertexAttrib3fNV;
extern PFNGLVERTEXATTRIB3FVNVPROC glVertexAttrib3fvNV;
extern PFNGLVERTEXATTRIB3SNVPROC glVertexAttrib3sNV;
extern PFNGLVERTEXATTRIB3SVNVPROC glVertexAttrib3svNV;
extern PFNGLVERTEXATTRIB4DNVPROC glVertexAttrib4dNV;
extern PFNGLVERTEXATTRIB4DVNVPROC glVertexAttrib4dvNV;
extern PFNGLVERTEXATTRIB4FNVPROC glVertexAttrib4fNV;
extern PFNGLVERTEXATTRIB4FVNVPROC glVertexAttrib4fvNV;
extern PFNGLVERTEXATTRIB4SNVPROC glVertexAttrib4sNV;
extern PFNGLVERTEXATTRIB4SVNVPROC glVertexAttrib4svNV;
extern PFNGLVERTEXATTRIB4UBNVPROC glVertexAttrib4ubNV;
extern PFNGLVERTEXATTRIB4UBVNVPROC glVertexAttrib4ubvNV;
extern PFNGLVERTEXATTRIBS1DVNVPROC glVertexAttribs1dvNV;
extern PFNGLVERTEXATTRIBS1FVNVPROC glVertexAttribs1fvNV;
extern PFNGLVERTEXATTRIBS1SVNVPROC glVertexAttribs1svNV;
extern PFNGLVERTEXATTRIBS2DVNVPROC glVertexAttribs2dvNV;
extern PFNGLVERTEXATTRIBS2FVNVPROC glVertexAttribs2fvNV;
extern PFNGLVERTEXATTRIBS2SVNVPROC glVertexAttribs2svNV;
extern PFNGLVERTEXATTRIBS3DVNVPROC glVertexAttribs3dvNV;
extern PFNGLVERTEXATTRIBS3FVNVPROC glVertexAttribs3fvNV;
extern PFNGLVERTEXATTRIBS3SVNVPROC glVertexAttribs3svNV;
extern PFNGLVERTEXATTRIBS4DVNVPROC glVertexAttribs4dvNV;
extern PFNGLVERTEXATTRIBS4FVNVPROC glVertexAttribs4fvNV;
extern PFNGLVERTEXATTRIBS4SVNVPROC glVertexAttribs4svNV;
extern PFNGLVERTEXATTRIBS4UBVNVPROC glVertexAttribs4ubvNV;
#endif //GL_NV_vertex_program

#ifdef GL_PGI_misc_hints
extern PFNGLHINTPGIPROC glHintPGI;
#endif //GL_PGI_misc_hints

#ifdef GL_SGIS_detail_texture
extern PFNGLDETAILTEXFUNCSGISPROC glDetailTexFuncSGIS;
extern PFNGLGETDETAILTEXFUNCSGISPROC glGetDetailTexFuncSGIS;
#endif //GL_SGIS_detail_texture

#ifdef GL_SGIS_fog_function
extern PFNGLFOGFUNCSGISPROC glFogFuncSGIS;
extern PFNGLGETFOGFUNCSGISPROC glGetFogFuncSGIS;
#endif //GL_SGIS_fog_function

#ifdef GL_SGIS_multisample
extern PFNGLSAMPLEMASKSGISPROC glSampleMaskSGIS;
extern PFNGLSAMPLEPATTERNSGISPROC glSamplePatternSGIS;
#endif //GL_SGIS_multisample

#ifdef GL_SGIS_pixel_texture
extern PFNGLPIXELTEXGENPARAMETERISGISPROC glPixelTexGenParameteriSGIS;
extern PFNGLPIXELTEXGENPARAMETERIVSGISPROC glPixelTexGenParameterivSGIS;
extern PFNGLPIXELTEXGENPARAMETERFSGISPROC glPixelTexGenParameterfSGIS;
extern PFNGLPIXELTEXGENPARAMETERFVSGISPROC glPixelTexGenParameterfvSGIS;
extern PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC glGetPixelTexGenParameterivSGIS;
extern PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC glGetPixelTexGenParameterfvSGIS;
#endif //GL_SGIS_pixel_texture

#ifdef GL_SGIS_point_parameters
extern PFNGLPOINTPARAMETERFSGISPROC glPointParameterfSGIS;
extern PFNGLPOINTPARAMETERFVSGISPROC glPointParameterfvSGIS;
#endif //GL_SGIS_point_parameters

#ifdef GL_SGIS_sharpen_texture
extern PFNGLSHARPENTEXFUNCSGISPROC glSharpenTexFuncSGIS;
extern PFNGLGETSHARPENTEXFUNCSGISPROC glGetSharpenTexFuncSGIS;
#endif //GL_SGIS_sharpen_texture

#ifdef GL_SGIS_texture4D
extern PFNGLTEXIMAGE4DSGISPROC glTexImage4DSGIS;
extern PFNGLTEXSUBIMAGE4DSGISPROC glTexSubImage4DSGIS;
#endif //GL_SGIS_texture4D

#ifdef GL_SGIS_texture_color_mask
extern PFNGLTEXTURECOLORMASKSGISPROC glTextureColorMaskSGIS;
#endif //GL_SGIS_texture_color_mask

#ifdef GL_SGIS_texture_filter4
extern PFNGLGETTEXFILTERFUNCSGISPROC glGetTexFilterFuncSGIS;
extern PFNGLTEXFILTERFUNCSGISPROC glTexFilterFuncSGIS;
#endif //GL_SGIS_texture_filter4

#ifdef GL_SGIX_async
extern PFNGLASYNCMARKERSGIXPROC glAsyncMarkerSGIX;
extern PFNGLFINISHASYNCSGIXPROC glFinishAsyncSGIX;
extern PFNGLPOLLASYNCSGIXPROC glPollAsyncSGIX;
extern PFNGLGENASYNCMARKERSSGIXPROC glGenAsyncMarkersSGIX;
extern PFNGLDELETEASYNCMARKERSSGIXPROC glDeleteAsyncMarkersSGIX;
extern PFNGLISASYNCMARKERSGIXPROC glIsAsyncMarkerSGIX;
#endif //GL_SGIX_async

#ifdef GL_SGIX_flush_raster
extern PFNGLFLUSHRASTERSGIXPROC glFlushRasterSGIX;
#endif //GL_SGIX_flush_raster

#ifdef GL_SGIX_fragment_lighting
extern PFNGLFRAGMENTCOLORMATERIALSGIXPROC glFragmentColorMaterialSGIX;
extern PFNGLFRAGMENTLIGHTFSGIXPROC glFragmentLightfSGIX;
extern PFNGLFRAGMENTLIGHTFVSGIXPROC glFragmentLightfvSGIX;
extern PFNGLFRAGMENTLIGHTISGIXPROC glFragmentLightiSGIX;
extern PFNGLFRAGMENTLIGHTIVSGIXPROC glFragmentLightivSGIX;
extern PFNGLFRAGMENTLIGHTMODELFSGIXPROC glFragmentLightModelfSGIX;
extern PFNGLFRAGMENTLIGHTMODELFVSGIXPROC glFragmentLightModelfvSGIX;
extern PFNGLFRAGMENTLIGHTMODELISGIXPROC glFragmentLightModeliSGIX;
extern PFNGLFRAGMENTLIGHTMODELIVSGIXPROC glFragmentLightModelivSGIX;
extern PFNGLFRAGMENTMATERIALFSGIXPROC glFragmentMaterialfSGIX;
extern PFNGLFRAGMENTMATERIALFVSGIXPROC glFragmentMaterialfvSGIX;
extern PFNGLFRAGMENTMATERIALISGIXPROC glFragmentMaterialiSGIX;
extern PFNGLFRAGMENTMATERIALIVSGIXPROC glFragmentMaterialivSGIX;
extern PFNGLGETFRAGMENTLIGHTFVSGIXPROC glGetFragmentLightfvSGIX;
extern PFNGLGETFRAGMENTLIGHTIVSGIXPROC glGetFragmentLightivSGIX;
extern PFNGLGETFRAGMENTMATERIALFVSGIXPROC glGetFragmentMaterialfvSGIX;
extern PFNGLGETFRAGMENTMATERIALIVSGIXPROC glGetFragmentMaterialivSGIX;
extern PFNGLLIGHTENVISGIXPROC glLightEnviSGIX;
#endif //GL_SGIX_fragment_lighting

#ifdef GL_SGIX_framezoom
extern PFNGLFRAMEZOOMSGIXPROC glFrameZoomSGIX;
#endif //GL_SGIX_framezoom

#ifdef GL_SGIX_igloo_interface
extern PFNGLIGLOOINTERFACESGIXPROC glIglooInterfaceSGIX;
#endif //GL_SGIX_igloo_interface

#ifdef GL_SGIX_instruments
extern PFNGLGETINSTRUMENTSSGIXPROC glGetInstrumentsSGIX;
extern PFNGLINSTRUMENTSBUFFERSGIXPROC glInstrumentsBufferSGIX;
extern PFNGLPOLLINSTRUMENTSSGIXPROC glPollInstrumentsSGIX;
extern PFNGLREADINSTRUMENTSSGIXPROC glReadInstrumentsSGIX;
extern PFNGLSTARTINSTRUMENTSSGIXPROC glStartInstrumentsSGIX;
extern PFNGLSTOPINSTRUMENTSSGIXPROC glStopInstrumentsSGIX;
#endif //GL_SGIX_instruments

#ifdef GL_SGIX_list_priority
extern PFNGLGETLISTPARAMETERFVSGIXPROC glGetListParameterfvSGIX;
extern PFNGLGETLISTPARAMETERIVSGIXPROC glGetListParameterivSGIX;
extern PFNGLLISTPARAMETERFSGIXPROC glListParameterfSGIX;
extern PFNGLLISTPARAMETERFVSGIXPROC glListParameterfvSGIX;
extern PFNGLLISTPARAMETERISGIXPROC glListParameteriSGIX;
extern PFNGLLISTPARAMETERIVSGIXPROC glListParameterivSGIX;
#endif //GL_SGIX_list_priority

#ifdef GL_SGIX_pixel_texture
extern PFNGLPIXELTEXGENSGIXPROC glPixelTexGenSGIX;
#endif //GL_SGIX_pixel_texture

#ifdef GL_SGIX_polynomial_ffd
extern PFNGLDEFORMATIONMAP3DSGIXPROC glDeformationMap3dSGIX;
extern PFNGLDEFORMATIONMAP3FSGIXPROC glDeformationMap3fSGIX;
extern PFNGLDEFORMSGIXPROC glDeformSGIX;
extern PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC glLoadIdentityDeformationMapSGIX;
#endif //GL_SGIX_polynomial_ffd

#ifdef GL_SGIX_reference_plane
extern PFNGLREFERENCEPLANESGIXPROC glReferencePlaneSGIX;
#endif //GL_SGIX_reference_plane

#ifdef GL_SGIX_sprite
extern PFNGLSPRITEPARAMETERFSGIXPROC glSpriteParameterfSGIX;
extern PFNGLSPRITEPARAMETERFVSGIXPROC glSpriteParameterfvSGIX;
extern PFNGLSPRITEPARAMETERISGIXPROC glSpriteParameteriSGIX;
extern PFNGLSPRITEPARAMETERIVSGIXPROC glSpriteParameterivSGIX;
#endif //GL_SGIX_sprite

#ifdef GL_SGIX_tag_sample_buffer
extern PFNGLTAGSAMPLEBUFFERSGIXPROC glTagSampleBufferSGIX;
#endif //GL_SGIX_tag_sample_buffer

#ifdef GL_SGI_color_table
extern PFNGLCOLORTABLESGIPROC glColorTableSGI;
extern PFNGLCOLORTABLEPARAMETERFVSGIPROC glColorTableParameterfvSGI;
extern PFNGLCOLORTABLEPARAMETERIVSGIPROC glColorTableParameterivSGI;
extern PFNGLCOPYCOLORTABLESGIPROC glCopyColorTableSGI;
extern PFNGLGETCOLORTABLESGIPROC glGetColorTableSGI;
extern PFNGLGETCOLORTABLEPARAMETERFVSGIPROC glGetColorTableParameterfvSGI;
extern PFNGLGETCOLORTABLEPARAMETERIVSGIPROC glGetColorTableParameterivSGI;
#endif //GL_SGI_color_table

#ifdef GL_SUNX_constant_data
extern PFNGLFINISHTEXTURESUNXPROC glFinishTextureSUNX;
#endif //GL_SUNX_constant_data

#ifdef GL_SUN_global_alpha
extern PFNGLGLOBALALPHAFACTORBSUNPROC glGlobalAlphaFactorbSUN;
extern PFNGLGLOBALALPHAFACTORSSUNPROC glGlobalAlphaFactorsSUN;
extern PFNGLGLOBALALPHAFACTORISUNPROC glGlobalAlphaFactoriSUN;
extern PFNGLGLOBALALPHAFACTORFSUNPROC glGlobalAlphaFactorfSUN;
extern PFNGLGLOBALALPHAFACTORDSUNPROC glGlobalAlphaFactordSUN;
extern PFNGLGLOBALALPHAFACTORUBSUNPROC glGlobalAlphaFactorubSUN;
extern PFNGLGLOBALALPHAFACTORUSSUNPROC glGlobalAlphaFactorusSUN;
extern PFNGLGLOBALALPHAFACTORUISUNPROC glGlobalAlphaFactoruiSUN;
#endif //GL_SUN_global_alpha

#ifdef GL_SUN_mesh_array
extern PFNGLDRAWMESHARRAYSSUNPROC glDrawMeshArraysSUN;
#endif //GL_SUN_mesh_array

#ifdef GL_SUN_triangle_list
extern PFNGLREPLACEMENTCODEUISUNPROC glReplacementCodeuiSUN;
extern PFNGLREPLACEMENTCODEUSSUNPROC glReplacementCodeusSUN;
extern PFNGLREPLACEMENTCODEUBSUNPROC glReplacementCodeubSUN;
extern PFNGLREPLACEMENTCODEUIVSUNPROC glReplacementCodeuivSUN;
extern PFNGLREPLACEMENTCODEUSVSUNPROC glReplacementCodeusvSUN;
extern PFNGLREPLACEMENTCODEUBVSUNPROC glReplacementCodeubvSUN;
extern PFNGLREPLACEMENTCODEPOINTERSUNPROC glReplacementCodePointerSUN;
#endif //GL_SUN_triangle_list

#ifdef GL_SUN_vertex
extern PFNGLCOLOR4UBVERTEX2FSUNPROC glColor4ubVertex2fSUN;
extern PFNGLCOLOR4UBVERTEX2FVSUNPROC glColor4ubVertex2fvSUN;
extern PFNGLCOLOR4UBVERTEX3FSUNPROC glColor4ubVertex3fSUN;
extern PFNGLCOLOR4UBVERTEX3FVSUNPROC glColor4ubVertex3fvSUN;
extern PFNGLCOLOR3FVERTEX3FSUNPROC glColor3fVertex3fSUN;
extern PFNGLCOLOR3FVERTEX3FVSUNPROC glColor3fVertex3fvSUN;
extern PFNGLNORMAL3FVERTEX3FSUNPROC glNormal3fVertex3fSUN;
extern PFNGLNORMAL3FVERTEX3FVSUNPROC glNormal3fVertex3fvSUN;
extern PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC glColor4fNormal3fVertex3fSUN;
extern PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC glColor4fNormal3fVertex3fvSUN;
extern PFNGLTEXCOORD2FVERTEX3FSUNPROC glTexCoord2fVertex3fSUN;
extern PFNGLTEXCOORD2FVERTEX3FVSUNPROC glTexCoord2fVertex3fvSUN;
extern PFNGLTEXCOORD4FVERTEX4FSUNPROC glTexCoord4fVertex4fSUN;
extern PFNGLTEXCOORD4FVERTEX4FVSUNPROC glTexCoord4fVertex4fvSUN;
extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC glTexCoord2fColor4ubVertex3fSUN;
extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC glTexCoord2fColor4ubVertex3fvSUN;
extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC glTexCoord2fColor3fVertex3fSUN;
extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC glTexCoord2fColor3fVertex3fvSUN;
extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC glTexCoord2fNormal3fVertex3fSUN;
extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fNormal3fVertex3fvSUN;
extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glTexCoord2fColor4fNormal3fVertex3fSUN;
extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fColor4fNormal3fVertex3fvSUN;
extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC glTexCoord4fColor4fNormal3fVertex4fSUN;
extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC glTexCoord4fColor4fNormal3fVertex4fvSUN;
extern PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC glReplacementCodeuiVertex3fSUN;
extern PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC glReplacementCodeuiVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC glReplacementCodeuiColor4ubVertex3fSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC glReplacementCodeuiColor4ubVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC glReplacementCodeuiColor3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC glReplacementCodeuiColor3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC glReplacementCodeuiNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiNormal3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
#endif //GL_SUN_vertex

#ifdef GL_VERSION_1_2
extern PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
extern PFNGLTEXIMAGE3DPROC glTexImage3D;
extern PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
extern PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif //GL_VERSION_1_2

#ifdef GL_VERSION_1_3
extern PFNGLACTIVETEXTUREPROC glActiveTexture;
extern PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
extern PFNGLMULTITEXCOORD1DPROC glMultiTexCoord1d;
extern PFNGLMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
extern PFNGLMULTITEXCOORD1FPROC glMultiTexCoord1f;
extern PFNGLMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
extern PFNGLMULTITEXCOORD1IPROC glMultiTexCoord1i;
extern PFNGLMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
extern PFNGLMULTITEXCOORD1SPROC glMultiTexCoord1s;
extern PFNGLMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
extern PFNGLMULTITEXCOORD2DPROC glMultiTexCoord2d;
extern PFNGLMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
extern PFNGLMULTITEXCOORD2FPROC glMultiTexCoord2f;
extern PFNGLMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
extern PFNGLMULTITEXCOORD2IPROC glMultiTexCoord2i;
extern PFNGLMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
extern PFNGLMULTITEXCOORD2SPROC glMultiTexCoord2s;
extern PFNGLMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
extern PFNGLMULTITEXCOORD3DPROC glMultiTexCoord3d;
extern PFNGLMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
extern PFNGLMULTITEXCOORD3FPROC glMultiTexCoord3f;
extern PFNGLMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
extern PFNGLMULTITEXCOORD3IPROC glMultiTexCoord3i;
extern PFNGLMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
extern PFNGLMULTITEXCOORD3SPROC glMultiTexCoord3s;
extern PFNGLMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
extern PFNGLMULTITEXCOORD4DPROC glMultiTexCoord4d;
extern PFNGLMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
extern PFNGLMULTITEXCOORD4FPROC glMultiTexCoord4f;
extern PFNGLMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
extern PFNGLMULTITEXCOORD4IPROC glMultiTexCoord4i;
extern PFNGLMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
extern PFNGLMULTITEXCOORD4SPROC glMultiTexCoord4s;
extern PFNGLMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
extern PFNGLLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
extern PFNGLLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
extern PFNGLMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
extern PFNGLMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
extern PFNGLSAMPLECOVERAGEPROC glSampleCoverage;
extern PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
extern PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
extern PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
#endif //GL_VERSION_1_3

#if defined(_WIN32)
#ifdef WGL_ARB_buffer_region
extern PFNWGLCREATEBUFFERREGIONARBPROC wglCreateBufferRegionARB;
extern PFNWGLDELETEBUFFERREGIONARBPROC wglDeleteBufferRegionARB;
extern PFNWGLSAVEBUFFERREGIONARBPROC wglSaveBufferRegionARB;
extern PFNWGLRESTOREBUFFERREGIONARBPROC wglRestoreBufferRegionARB;
#endif //WGL_ARB_buffer_region

#ifdef WGL_ARB_extensions_string
extern PFNWGLGETEXTENSIONSSTRINGARBPROC wglGetExtensionsStringARB;
#endif //WGL_ARB_extensions_string

#ifdef WGL_ARB_make_current_read
extern PFNWGLMAKECONTEXTCURRENTARBPROC wglMakeContextCurrentARB;
extern PFNWGLGETCURRENTREADDCARBPROC wglGetCurrentReadDCARB;
#endif //WGL_ARB_make_current_read

#ifdef WGL_ARB_pbuffer
extern PFNWGLCREATEPBUFFERARBPROC wglCreatePbufferARB;
extern PFNWGLGETPBUFFERDCARBPROC wglGetPbufferDCARB;
extern PFNWGLRELEASEPBUFFERDCARBPROC wglReleasePbufferDCARB;
extern PFNWGLDESTROYPBUFFERARBPROC wglDestroyPbufferARB;
extern PFNWGLQUERYPBUFFERARBPROC wglQueryPbufferARB;
#endif //WGL_ARB_pbuffer

#ifdef WGL_ARB_pixel_format
extern PFNWGLGETPIXELFORMATATTRIBIVARBPROC wglGetPixelFormatAttribivARB;
extern PFNWGLGETPIXELFORMATATTRIBFVARBPROC wglGetPixelFormatAttribfvARB;
extern PFNWGLCHOOSEPIXELFORMATARBPROC wglChoosePixelFormatARB;
#endif //WGL_ARB_pixel_format

#ifdef WGL_ARB_render_texture
extern PFNWGLBINDTEXIMAGEARBPROC wglBindTexImageARB;
extern PFNWGLRELEASETEXIMAGEARBPROC wglReleaseTexImageARB;
extern PFNWGLSETPBUFFERATTRIBARBPROC wglSetPbufferAttribARB;
#endif //WGL_ARB_render_texture

#ifdef WGL_EXT_display_color_table
extern PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC wglCreateDisplayColorTableEXT;
extern PFNWGLLOADDISPLAYCOLORTABLEEXTPROC wglLoadDisplayColorTableEXT;
extern PFNWGLBINDDISPLAYCOLORTABLEEXTPROC wglBindDisplayColorTableEXT;
extern PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC wglDestroyDisplayColorTableEXT;
#endif //WGL_EXT_display_color_table

#ifdef WGL_EXT_extensions_string
extern PFNWGLGETEXTENSIONSSTRINGEXTPROC wglGetExtensionsStringEXT;
#endif //WGL_EXT_extensions_string

#ifdef WGL_EXT_make_current_read
extern PFNWGLMAKECONTEXTCURRENTEXTPROC wglMakeContextCurrentEXT;
extern PFNWGLGETCURRENTREADDCEXTPROC wglGetCurrentReadDCEXT;
#endif //WGL_EXT_make_current_read

#ifdef WGL_EXT_pbuffer
extern PFNWGLCREATEPBUFFEREXTPROC wglCreatePbufferEXT;
extern PFNWGLGETPBUFFERDCEXTPROC wglGetPbufferDCEXT;
extern PFNWGLRELEASEPBUFFERDCEXTPROC wglReleasePbufferDCEXT;
extern PFNWGLDESTROYPBUFFEREXTPROC wglDestroyPbufferEXT;
extern PFNWGLQUERYPBUFFEREXTPROC wglQueryPbufferEXT;
#endif //WGL_EXT_pbuffer

#ifdef WGL_EXT_pixel_format
extern PFNWGLGETPIXELFORMATATTRIBIVEXTPROC wglGetPixelFormatAttribivEXT;
extern PFNWGLGETPIXELFORMATATTRIBFVEXTPROC wglGetPixelFormatAttribfvEXT;
extern PFNWGLCHOOSEPIXELFORMATEXTPROC wglChoosePixelFormatEXT;
#endif //WGL_EXT_pixel_format

#ifdef WGL_EXT_swap_control
extern PFNWGLSWAPINTERVALEXTPROC wglSwapIntervalEXT;
extern PFNWGLGETSWAPINTERVALEXTPROC wglGetSwapIntervalEXT;
#endif //WGL_EXT_swap_control

#ifdef WGL_I3D_digital_video_control
extern PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC wglGetDigitalVideoParametersI3D;
extern PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC wglSetDigitalVideoParametersI3D;
#endif //WGL_I3D_digital_video_control

#ifdef WGL_I3D_gamma
extern PFNWGLGETGAMMATABLEPARAMETERSI3DPROC wglGetGammaTableParametersI3D;
extern PFNWGLSETGAMMATABLEPARAMETERSI3DPROC wglSetGammaTableParametersI3D;
extern PFNWGLGETGAMMATABLEI3DPROC wglGetGammaTableI3D;
extern PFNWGLSETGAMMATABLEI3DPROC wglSetGammaTableI3D;
#endif //WGL_I3D_gamma

#ifdef WGL_I3D_genlock
extern PFNWGLENABLEGENLOCKI3DPROC wglEnableGenlockI3D;
extern PFNWGLDISABLEGENLOCKI3DPROC wglDisableGenlockI3D;
extern PFNWGLISENABLEDGENLOCKI3DPROC wglIsEnabledGenlockI3D;
extern PFNWGLGENLOCKSOURCEI3DPROC wglGenlockSourceI3D;
extern PFNWGLGETGENLOCKSOURCEI3DPROC wglGetGenlockSourceI3D;
extern PFNWGLGENLOCKSOURCEEDGEI3DPROC wglGenlockSourceEdgeI3D;
extern PFNWGLGETGENLOCKSOURCEEDGEI3DPROC wglGetGenlockSourceEdgeI3D;
extern PFNWGLGENLOCKSAMPLERATEI3DPROC wglGenlockSampleRateI3D;
extern PFNWGLGETGENLOCKSAMPLERATEI3DPROC wglGetGenlockSampleRateI3D;
extern PFNWGLGENLOCKSOURCEDELAYI3DPROC wglGenlockSourceDelayI3D;
extern PFNWGLGETGENLOCKSOURCEDELAYI3DPROC wglGetGenlockSourceDelayI3D;
extern PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC wglQueryGenlockMaxSourceDelayI3D;
#endif //WGL_I3D_genlock

#ifdef WGL_I3D_image_buffer
extern PFNWGLCREATEIMAGEBUFFERI3DPROC wglCreateImageBufferI3D;
extern PFNWGLDESTROYIMAGEBUFFERI3DPROC wglDestroyImageBufferI3D;
extern PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC wglAssociateImageBufferEventsI3D;
extern PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC wglReleaseImageBufferEventsI3D;
#endif //WGL_I3D_image_buffer

#ifdef WGL_I3D_swap_frame_lock
extern PFNWGLENABLEFRAMELOCKI3DPROC wglEnableFrameLockI3D;
extern PFNWGLDISABLEFRAMELOCKI3DPROC wglDisableFrameLockI3D;
extern PFNWGLISENABLEDFRAMELOCKI3DPROC wglIsEnabledFrameLockI3D;
extern PFNWGLQUERYFRAMELOCKMASTERI3DPROC wglQueryFrameLockMasterI3D;
#endif //WGL_I3D_swap_frame_lock

#ifdef WGL_I3D_swap_frame_usage
extern PFNWGLGETFRAMEUSAGEI3DPROC wglGetFrameUsageI3D;
extern PFNWGLBEGINFRAMETRACKINGI3DPROC wglBeginFrameTrackingI3D;
extern PFNWGLENDFRAMETRACKINGI3DPROC wglEndFrameTrackingI3D;
extern PFNWGLQUERYFRAMETRACKINGI3DPROC wglQueryFrameTrackingI3D;
#endif //WGL_I3D_swap_frame_usage

#ifdef WGL_NV_vertex_array_range
extern PFNWGLALLOCATEMEMORYNVPROC wglAllocateMemoryNV;
extern PFNWGLFREEMEMORYNVPROC wglFreeMemoryNV;
#endif //WGL_NV_vertex_array_range

#ifdef WGL_OML_sync_control
extern PFNWGLGETSYNCVALUESOMLPROC wglGetSyncValuesOML;
extern PFNWGLGETMSCRATEOMLPROC wglGetMscRateOML;
extern PFNWGLSWAPBUFFERSMSCOMLPROC wglSwapBuffersMscOML;
extern PFNWGLSWAPLAYERBUFFERSMSCOMLPROC wglSwapLayerBuffersMscOML;
extern PFNWGLWAITFORMSCOMLPROC wglWaitForMscOML;
extern PFNWGLWAITFORSBCOMLPROC wglWaitForSbcOML;
#endif //WGL_OML_sync_control

#endif //_WIN32
#endif //GLEXTENSIONREG_H__
