[0.3.0]
This release comes with a new library: carbon. The carbon library contains a
gui-framework and a simulation-framework which wraps simspark using qt.
Its main features are:
 - Offering a graphical user interface which can be extended
   by visual and functional plugins. The plugins can be used
   to write easy-to-use interfaces to simspark simulations.
 - Creating, managing and executing simspark-simulations
   alongside with any additional threads and processes.
 - The gui can be altered flexibly. Its main window with
   "attachment points" is loaded from a shared library, and
   its used plugins are loaded from shared libraries too.
   Plugins with visual representation can be attached to the
   Gui.

[0.2.4]
Simspark 0.2.4 is ready. This release is mostly a bug fix and compile fix
release for RoboCup 2013. New exciting changes are pending, but will be
released in Simspark 0.3.0 very soon. The most considerable change in this
release is the possibility of sending parameters to the SceneEffector, which 
is required for Heterogeneous robots functionality.

Additionally, a paper about recent changes to Simspark/Rcssserver3d which is
mostly written by Yuan Xu is available in SimSpark SVN repository. 

[0.2.3]
Finally, a new release of simspark has come! The most exciting feature of this
release is probably the multi-threaded agent control (thanks to Andreas from
RoboCanes for the initial patch). Previously, this part of the code was 
sequential even in multi-threaded mode, but now it can manage several agnets in
parallel which should (hopefully!) increase performance. Besides, there are 
a number of compilation and bug fixes here and there and also better Windows
support. Small enhancements are also available. You can find more details below:

- Multi-threaded Agent Control
 -- AgentControl multi-threaded implementation added and enabled by default.
    It can be disabled using $threadedAgentControl variable inside spark.rb.
- OpenGL System can now request the end of simulation (makes it possible to
  close spark monitor's window to quit!
- The location of init scripts (e.g. zeitgeist.rb) can now be specified using
  --init-script-prefix (you still can put most of the scripts and data files
  like rsg/ directory inside your ~/.simspark/ instead).
- Compilation fixes
- Support more recent Ruby versions
- Windows Compilation fixes, and few enhancements for better Windows support
- Support for building Windows binary in GNU/Linux using Mingw32
 -- Notice: Windows related changes were already used in 0.2.2 simspark
    installer
- Several bug fixes

[0.2.2]
This release features many small enhancements which will benefit users.
It contains many bug fixes and performance improvements, in addition to
fixing some compilation issues. The behavior of ACC perceptor has been slightly
changed, and the multi-threaded mode should work without any known bugs. 
Support for the camera sensor is improved too. More details are as follows:

- ACC sensor provides raw data without any pre-processing
 -- You can apply the following filter to 'RawACC' value received from the 
    simulator to get ACC value as what you'd receive in previous versions:
    ACC = 0.9 * ACC + (0.1) * RawACC
- Using base64 encoding for camera perceptor
- Fixed bugs in multi-threaded mode.
- Compilation fixes
- HingePerceptor can report torque
- Better Performance
- New timing system result in more cleaner code and prevent wasting CPU time
- Do not block on sending data to clients. Previously, simulator would block on
  send() until it can send all data to clients.

[0.2.1]
This release of simspark is prepared for RoboCup 2010 competitions in Singapore.
In this release you can find some bug and compilation fixes, improved Windows
support and some new features such as the potential of using different 
physical simulation engines.

* New features:
 - The core physics system does no longer depend on ODE (Thanks to Andreas). 
 ODE implementation is now provided as a plugin.
   
* Fixes:
 - Compilation fixes on newer compilers (VS 2010)
 - Fixed some bugs on 64 bit systems and in multi-threaded mode. It is (hopefully)
   possible to run multi-threaded games while logging is enabled

[0.2]
In this release you can find some bug and compilation fixes, improved Windows
support and some new features including a new sensor and features to facilitate
agent debugging and development. It also provides a more deterministic behavior 
for agents which should make them more reliable.

* New features:
 - An Accelerometer sensor which reports the linear acceleration
 - A "Sync Mode" operation is introduced. In this mode, the server will not
   advance to the next cycle until all connected agents send a "(syn)" command
   to the server. You can use this mode by setting "agentSyncMode" to true in
   simspark.rb (or spark.rb)
 - Simulator will run in simulation time mode instead of real time
   if "useRealTime" variable is set to false in simspark.rb (or spark.rb)
   
* More deterministic agent-server communication
 - Simspark will now collect received commands right before sending
   sense data of the last cycle. So, any commands which is sent by agents
   after receiving new sense data will be executed in the next cycle, not the 
   current one. This results in a more deterministic behavior, and agents' 
   efficiency should not change between remote and local runs considerably.

* More convenience:
 - Simspark should always accept connections. No more "Connection refused"
   messages and the need to wait for simspark's network port to be freed!
 - To make changes to most of the resource files (e.g. simspark.rb), you can
   create a copy in ~/.simspark directory and make desired changes there. The 
   directory structure of the original files should be preserved (e.g.
   rsg/agent/nao/nao.rgs)

* Fixes:
 - Compilation fixes
 - Fixed some rendering bugs (agents not visible through goals)

[0.1.2]
This release brings some bugfixes, better performance and also better Windows
support. A Windows installer will be available too. This is the first version 
which runs in multi-threaded mode by default. The multi-threaded mode is still
in early stages, and it can be improved cosiderably in future.

Main changes of this release are:
 - improved Windows support, including Windows Installer. 
 - Multi-threaded mode now works, and is the default mode when running simspark
 - Performance improvements
 - Fixed a bug in networking code, which were introduced in 0.1.1

[0.1.1]
This release is mainly a bug-fix release, and is the last release before
RoboCup 2009 competitions. It is not much different from version 0.1.
Main changes are:
 - improved MacOSX and Windows support
 - compilation fixes for latest library versions
 - more reliable and a bit more fair network communication with the agents

[0.1]
This is the first release of the simulator after RoboCup 2008 competitions,
and the first release of simspark core simulation package as a separate
package.
In this release, MaxStepsPerCycle have been reduced to 1, so the simulation
time spent in each cycle is fixed. As a result, the performance of the agents
should not depend on the simulator speed, and they should be able to sense/act
in fixed simulation time steps.
This package provides a generic simulation framework and does not contain any
soccer features. To use the soccer simulator, you should install rcssserver3d
package which depends on this package. 
Also, we do not use autotools for our build system anymore. You should use
CMake (version 2.6) to build the package. See INSTALL for further installation
instructions.
