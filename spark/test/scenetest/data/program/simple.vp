!!ARBvp1.0

PARAM mvp[4] = { state.matrix.mvp };
PARAM lightPos = program.local[0];
PARAM viewPos = program.local[1];

ATTRIB localPos	= vertex.position;
ATTRIB tanU		= vertex.texcoord[1];
ATTRIB tanV		= vertex.texcoord[2];

# Transform vertex to clip space.
	DP4 result.position.x, mvp[0], localPos;
	DP4 result.position.y, mvp[1], localPos;
	DP4 result.position.z, mvp[2], localPos;
	DP4 result.position.w, mvp[3], localPos;

# Write out texcoords
MOV result.texcoord[0], vertex.texcoord[0];

# Create vector from vertex to light (toLight)
	TEMP toLight;
	SUB toLight, lightPos, localPos;

# Build tangent space transform (reconstruct N)
	TEMP N;
	MUL N, tanU.zxyw, tanV.yzxw;
	MAD N, tanU.yzxw, tanV.zxyw,-N;

	# Transform toLight to tangent space
	DP3 result.texcoord[1].x, toLight, tanU;
	DP3 result.texcoord[1].y, toLight, tanV;
	DP3 result.texcoord[1].z, toLight, N;

# Create vector from vertex to light (toLight)
	TEMP toView;
	SUB toView, viewPos, localPos;

	# Transform toLight to tangent space
	DP3 result.texcoord[2].x, toView, tanU;
	DP3 result.texcoord[2].y, toView, tanV;
	DP3 result.texcoord[2].z, toView, N;

END
